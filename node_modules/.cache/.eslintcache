[{"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\index.js":"1","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\App.js":"2","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\reportWebVitals.js":"3","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\pages\\isoCtrl\\isoCtrl.js":"4","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\pages\\home\\home.js":"5","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\pages\\welcome\\welcome.js":"6","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\pages\\register\\register.js":"7","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\reportBtns\\reportBtns.js":"8","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\datatable\\datatable.js":"9","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\stateTable\\stateTable.js":"10","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\commentBox\\commentBox.js":"11","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\actionExtra\\actionExtra.js":"12","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\actionBtns\\actionBtns.js":"13","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\selectPag\\selectPag.js":"14","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\progressTable\\progressTable.js":"15","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\checkInTable\\checkInTable.js":"16","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\navBar\\navBar.js":"17","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\myTrayTable\\myTrayTable.js":"18","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\myTrayBtn\\myTrayBtn.js":"19","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\binTable\\binTable.js":"20","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\navBtns\\navBtns.js":"21","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\statusDataTable\\statusDataTable.js":"22","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\menuList\\menuList.js":"23","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\binBtn\\binBtn.js":"24","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\cancelIso\\cancelIso.js":"25","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\uploadPopUp\\uploadPopUp.js":"26","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\chooseFile\\chooseFile.js":"27","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\dragAndDrop\\dragAndDrop.js":"28","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\pages\\loginPage\\loginPage.js":"29","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\login\\login.js":"30","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\roleDropDown\\roleDropDown.js":"31","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\onHoldTable\\onHoldTable.js":"32","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\onHoldBtn\\onHoldBtn.js":"33","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\historyDataTable\\historyDataTable.js":"34","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\procInsBtn\\procInsBtn.js":"35","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\procInstTable\\procInstTable.js":"36","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\uploadProcInst\\uploadProcInst.js":"37","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\reportsBtn\\reportsBtn.js":"38","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\reportBoxBtns\\reportBoxBtns.js":"39","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\forceClaimPopUp\\forceClaimPopUp.js":"40","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\uploadReportPopUp\\uploadReportPopUp.js":"41","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\issuedBtn\\issuedBtn.js":"42","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\pages\\changePassword\\changePassword.js":"43","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\progressBtn\\progressBtn.js":"44","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\progressPlot\\progressPlot.js":"45","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\modelledBtn\\modelledBtn.js":"46","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\modelledDataTable\\modelledDataTable.js":"47","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\holdComment\\holdComment.js":"48","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\renamePopUp\\renamePopUp.js":"49","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\commentPopUp\\commentPopUp.js":"50","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\pages\\equipments\\equipments.js":"51","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\EquipmentsNavBtns\\equipmentsNavBtns.js":"52","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\equipEstimatedDataTable\\equipEstimatedDataTable.js":"53","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\equipModelledDataTable\\equipModelledDataTable.js":"54","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\progressPlotEquipments\\progressPlotEquipments.js":"55","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\uploadEquisModelledPopUp\\uploadEquisModelledPopUp.js":"56","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\equipTypesDataTable\\equipTypesDataTable.js":"57"},{"size":756,"mtime":1620977886750,"results":"58","hashOfConfig":"59"},{"size":1336,"mtime":1623664350195,"results":"60","hashOfConfig":"59"},{"size":375,"mtime":1620977886757,"results":"61","hashOfConfig":"59"},{"size":64768,"mtime":1623664711785,"results":"62","hashOfConfig":"59"},{"size":437,"mtime":1620977886757,"results":"63","hashOfConfig":"59"},{"size":977,"mtime":1623664277616,"results":"64","hashOfConfig":"59"},{"size":3627,"mtime":1621337132858,"results":"65","hashOfConfig":"59"},{"size":2058,"mtime":1620977886735,"results":"66","hashOfConfig":"59"},{"size":47167,"mtime":1623664744550,"results":"67","hashOfConfig":"59"},{"size":18299,"mtime":1623664277584,"results":"68","hashOfConfig":"59"},{"size":344,"mtime":1614590522413,"results":"69","hashOfConfig":"59"},{"size":5425,"mtime":1623664277530,"results":"70","hashOfConfig":"59"},{"size":11949,"mtime":1623664277512,"results":"71","hashOfConfig":"59"},{"size":1691,"mtime":1620977886735,"results":"72","hashOfConfig":"59"},{"size":4771,"mtime":1620977886735,"results":"73","hashOfConfig":"59"},{"size":5991,"mtime":1620977886703,"results":"74","hashOfConfig":"59"},{"size":6410,"mtime":1623664350210,"results":"75","hashOfConfig":"59"},{"size":35089,"mtime":1623664414103,"results":"76","hashOfConfig":"59"},{"size":1464,"mtime":1620977886719,"results":"77","hashOfConfig":"59"},{"size":10334,"mtime":1623664277529,"results":"78","hashOfConfig":"59"},{"size":8137,"mtime":1620977886719,"results":"79","hashOfConfig":"59"},{"size":16584,"mtime":1623664441633,"results":"80","hashOfConfig":"59"},{"size":8673,"mtime":1620977886719,"results":"81","hashOfConfig":"59"},{"size":1192,"mtime":1620977886703,"results":"82","hashOfConfig":"59"},{"size":3655,"mtime":1623664277522,"results":"83","hashOfConfig":"59"},{"size":2212,"mtime":1623664277590,"results":"84","hashOfConfig":"59"},{"size":1125,"mtime":1614590522410,"results":"85","hashOfConfig":"59"},{"size":9810,"mtime":1623664277529,"results":"86","hashOfConfig":"59"},{"size":492,"mtime":1623664277615,"results":"87","hashOfConfig":"59"},{"size":3153,"mtime":1623664350210,"results":"88","hashOfConfig":"59"},{"size":3017,"mtime":1620977886735,"results":"89","hashOfConfig":"59"},{"size":10633,"mtime":1623664277578,"results":"90","hashOfConfig":"59"},{"size":1191,"mtime":1620977886735,"results":"91","hashOfConfig":"59"},{"size":11253,"mtime":1623664402645,"results":"92","hashOfConfig":"59"},{"size":1846,"mtime":1620977886735,"results":"93","hashOfConfig":"59"},{"size":14865,"mtime":1623664424442,"results":"94","hashOfConfig":"59"},{"size":9895,"mtime":1623664277592,"results":"95","hashOfConfig":"59"},{"size":1208,"mtime":1620977886735,"results":"96","hashOfConfig":"59"},{"size":2260,"mtime":1623664350210,"results":"97","hashOfConfig":"59"},{"size":7086,"mtime":1623664277534,"results":"98","hashOfConfig":"59"},{"size":3816,"mtime":1623664350214,"results":"99","hashOfConfig":"59"},{"size":1195,"mtime":1623664277542,"results":"100","hashOfConfig":"59"},{"size":6552,"mtime":1623664277603,"results":"101","hashOfConfig":"59"},{"size":1201,"mtime":1623664277576,"results":"102","hashOfConfig":"59"},{"size":1558,"mtime":1623664277591,"results":"103","hashOfConfig":"59"},{"size":1191,"mtime":1623664277544,"results":"104","hashOfConfig":"59"},{"size":6128,"mtime":1623664277544,"results":"105","hashOfConfig":"59"},{"size":1643,"mtime":1623664277543,"results":"106","hashOfConfig":"59"},{"size":1966,"mtime":1623664277581,"results":"107","hashOfConfig":"59"},{"size":1274,"mtime":1623664277533,"results":"108","hashOfConfig":"59"},{"size":7422,"mtime":1623664350218,"results":"109","hashOfConfig":"59"},{"size":3650,"mtime":1623664350207,"results":"110","hashOfConfig":"59"},{"size":8046,"mtime":1623664350207,"results":"111","hashOfConfig":"59"},{"size":7905,"mtime":1623664350207,"results":"112","hashOfConfig":"59"},{"size":1571,"mtime":1623664350209,"results":"113","hashOfConfig":"59"},{"size":3894,"mtime":1623664350217,"results":"114","hashOfConfig":"59"},{"size":6817,"mtime":1623664350212,"results":"115","hashOfConfig":"59"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},"1eahr2m",{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"118"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"142"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"118"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"118"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"118"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"118"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"118"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"118"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"118"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"118"},"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\index.js",[],["244","245"],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\App.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\reportWebVitals.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\pages\\isoCtrl\\isoCtrl.js",["246","247","248","249","250","251","252","253","254","255","256"],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\pages\\home\\home.js",[],["257","258"],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\pages\\welcome\\welcome.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\pages\\register\\register.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\reportBtns\\reportBtns.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\datatable\\datatable.js",["259","260","261"],"import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Table, Input, Button, Space } from 'antd';\r\nimport Highlighter from 'react-highlight-words';\r\nimport { SearchOutlined } from '@ant-design/icons';\r\nimport './datatable.css'\r\nimport { Link } from 'react-router-dom';\r\nimport RenamePopUp from '../renamePopUp/renamePopUp';\r\n\r\n\r\nconst CryptoJS = require(\"crypto-js\");\r\n    const SecureStorage = require(\"secure-web-storage\");\r\n    var SECRET_KEY = 'sanud2ha8shd72h';\r\n    \r\n    var secureStorage = new SecureStorage(localStorage, {\r\n        hash: function hash(key) {\r\n            key = CryptoJS.SHA256(key, SECRET_KEY);\r\n    \r\n            return key.toString();\r\n        },\r\n        encrypt: function encrypt(data) {\r\n            data = CryptoJS.AES.encrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString();\r\n    \r\n            return data;\r\n        },\r\n        decrypt: function decrypt(data) {\r\n            data = CryptoJS.AES.decrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString(CryptoJS.enc.Utf8);\r\n    \r\n            return data;\r\n        }\r\n    });\r\n\r\nclass DataTable extends React.Component{\r\n  state = {\r\n    searchText: '',\r\n    searchedColumn: '',\r\n    data: [],\r\n    tab: this.props.currentTab,\r\n    role: this.props.currentRole,\r\n    selectedRows: [],\r\n    selectedRowsKeys: [],\r\n    updateData: this.props.updateData,\r\n    username: \"\",\r\n    acronyms : null\r\n  };\r\n\r\n  unlock(filename){\r\n    this.props.unlock(filename)\r\n  }\r\n\r\n  rename(newName, oldName){\r\n    this.props.rename(newName, oldName)\r\n  }\r\n\r\n  componentDidMount(){\r\n\r\n    \r\n    fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/api/roles/acronyms\")\r\n      .then(response => response.json())\r\n      .then(json => {\r\n        let dict = {}\r\n\r\n        for(let i = 0; i < json.length; i++){\r\n          dict[json[i].name] = json[i].code\r\n        }\r\n        this.setState({\r\n          acronyms: dict\r\n        })\r\n      })\r\n\r\n      let body \r\n      if(this.props.currentTab === \"Issued\"){\r\n        body ={\r\n          currentTab : \"LDE/IsoControl\"\r\n        }\r\n      }else{\r\n        body ={\r\n          currentTab : this.props.currentTab\r\n        }\r\n      }\r\n      const options = {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(body)\r\n    }\r\n      fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/files\", options)\r\n          .then(response => response.json())\r\n          .then(json => {\r\n                  var rows = []\r\n                  let row = null\r\n                  let pButton, iButton, rButton, bButton, uButton = null\r\n                  \r\n                  for(let i = 0; i < json.rows.length; i++){\r\n                    switch(json.rows[i].spo){\r\n                      case 0:\r\n                        pButton = <button className=\"btn btn-warning\" onClick={() => this.props.sendProcessClick(json.rows[i].filename)} disabled style={{backgroundColor:\"white\", fontSize:\"12px\", borderColor:\"black\", padding:\"2px 5px 2px 5px\", width:\"30px\", marginRight:\"5px\"}}>P</button>\r\n                        break;\r\n                      case 1:\r\n                        pButton = <button className=\"btn btn-warning\" onClick={() => this.props.sendProcessClick(json.rows[i].filename)} disabled style={{backgroundColor:\"yellow\", fontSize:\"12px\", borderColor:\"black\", padding:\"2px 5px 2px 5px\", width:\"30px\", marginRight:\"5px\"}}>P</button>\r\n                        break;\r\n                      case 2:\r\n                        pButton = <button className=\"btn btn-success\" onClick={() => this.props.sendProcessClick(json.rows[i].filename)} disabled style={{fontSize:\"12px\", borderColor:\"black\", padding:\"2px 5px 2px 5px\", width:\"30px\", marginRight:\"5px\"}}>P</button>\r\n                        break; \r\n                      case 3:\r\n                        pButton = <button className=\"btn btn-danger\" onClick={() => this.props.sendProcessClick(json.rows[i].filename)} disabled style={{fontSize:\"12px\", borderColor:\"black\", padding:\"2px 5px 2px 5px\", width:\"30px\", marginRight:\"5px\"}}>P</button>\r\n                        break;\r\n                      case 4:\r\n                        pButton = <button className=\"btn btn-warning\" onClick={() => this.props.sendProcessClick(json.rows[i].filename)} disabled style={{backgroundColor:\"orange\", fontSize:\"12px\", borderColor:\"black\", padding:\"2px 5px 2px 5px\", width:\"30px\", marginRight:\"5px\"}}>P</button>\r\n                        break;\r\n                      case 5:\r\n                        pButton = <button className=\"btn btn-warning\" onClick={() => this.props.sendCancelInstrumentClick(json.rows[i].filename)} disabled style={{backgroundColor:\"lightgray\", fontSize:\"12px\", borderColor:\"black\", padding:\"2px 5px 2px 5px\", width:\"30px\", marginRight:\"5px\"}}>P</button>\r\n                        break;\r\n                      default:  \r\n                        pButton = <button className=\"btn btn-warning\" onClick={() => this.props.sendProcessClick(json.rows[i].filename)} disabled style={{backgroundColor:\"white\", fontSize:\"12px\", borderColor:\"black\", padding:\"2px 5px 2px 5px\", width:\"30px\", marginRight:\"5px\"}}>P</button>      \r\n                    }\r\n                    switch(json.rows[i].sit){\r\n                      case 0:\r\n                        iButton = <button className=\"btn btn-warning\" onClick={() => this.props.sendInstrumentClick(json.rows[i].filename)} disabled style={{backgroundColor:\"white\", fontSize:\"12px\", borderColor:\"black\", padding:\"2px 5px 2px 5px\", width:\"30px\", marginRight:\"5px\"}}>I</button>\r\n                        break;\r\n                      case 1:\r\n                        iButton = <button className=\"btn btn-warning\" onClick={() => this.props.sendInstrumentClick(json.rows[i].filename)} disabled style={{backgroundColor:\"yellow\", fontSize:\"12px\", borderColor:\"black\", padding:\"2px 5px 2px 5px\", width:\"30px\", marginRight:\"5px\"}}>I</button>\r\n                        break;\r\n                      case 2:\r\n                        iButton = <button className=\"btn btn-success\" onClick={() => this.props.sendInstrumentClick(json.rows[i].filename)} disabled style={{fontSize:\"12px\", borderColor:\"black\", padding:\"2px 5px 2px 5px\", width:\"30px\", marginRight:\"5px\"}}>I</button>\r\n                        break; \r\n                      case 3:\r\n                        iButton = <button className=\"btn btn-danger\" onClick={() => this.props.sendInstrumentClick(json.rows[i].filename)} disabled style={{fontSize:\"12px\", borderColor:\"black\", padding:\"2px 5px 2px 5px\", width:\"30px\", marginRight:\"5px\"}}>I</button>\r\n                        break;\r\n                      case 4:\r\n                        iButton = <button className=\"btn btn-warning\" onClick={() => this.props.sendInstrumentClick(json.rows[i].filename)} disabled style={{backgroundColor:\"orange\", fontSize:\"12px\", borderColor:\"black\", padding:\"2px 5px 2px 5px\", width:\"30px\", marginRight:\"5px\"}}>I</button>\r\n                        break;\r\n                      case 5:\r\n                        iButton = <button className=\"btn btn-warning\" onClick={() => this.props.sendCancelInstrumentClick(json.rows[i].filename)} disabled style={{backgroundColor:\"lightgray\", fontSize:\"12px\", borderColor:\"black\", padding:\"2px 5px 2px 5px\", width:\"30px\", marginRight:\"5px\"}}>I</button>\r\n                        break;\r\n                      default:  \r\n                        iButton = <button className=\"btn btn-warning\" onClick={() => this.props.sendInstrumentClick(json.rows[i].filename)} disabled style={{backgroundColor:\"white\", fontSize:\"12px\", borderColor:\"black\", padding:\"2px 5px 2px 5px\", width:\"30px\", marginRight:\"5px\"}}>I</button>      \r\n                    }\r\n                    \r\n                    let revision = \"\"\r\n                    if(this.props.currentTab === \"Issued\"){\r\n                      console.log(json.rows[i].transmittal)\r\n                      revision = \"R\" + String(json.rows[i].revision - 1) + \" - \" + json.rows[i].transmittal + \"/\" + json.rows[i].issued_date\r\n                    }else{\r\n                      revision = \"*R\" + json.rows[i].revision\r\n                    }\r\n\r\n                    if(json.rows[i].requested === 1){\r\n                      rButton = <button className=\"btn btn-danger\" disabled style={{backgroundColor:\"yellow\", fontSize:\"12px\", borderColor:\"black\", padding:\"2px 5px 2px 5px\", width:\"30px\", marginRight:\"5px\"}}>R</button>\r\n                    }else if(json.rows[i].requested !== 1 && json.rows[i].requested !== 2){\r\n                      rButton = <button className=\"btn btn-warning\" disabled style={{backgroundColor:\"white\", fontSize:\"12px\", borderColor:\"black\", padding:\"2px 5px 2px 5px\", width:\"30px\", marginRight:\"5px\"}}>R</button>\r\n                    }else if(json.rows[i].requested === 2){\r\n                      rButton = <button className=\"btn btn-success\" disabled style={{fontSize:\"12px\", borderColor:\"black\", padding:\"2px 5px 2px 5px\", width:\"30px\", marginRight:\"5px\"}}>R</button>\r\n                    }\r\n\r\n                    if(json.rows[i].blocked === 1){\r\n                      if(json.rows[i].revision === 0 && json.rows[i].issued !== 1){\r\n                        if(secureStorage.getItem('user') === \"super@user.com\"){\r\n                          bButton =  <RenamePopUp filename={json.rows[i].filename} rename={this.rename.bind(this)} filename={json.rows[i].filename}/>\r\n                          uButton = <button className=\"btn btn-success\" onClick={()=>this.unlock(json.rows[i].filename)} style={{fontSize:\"12px\", borderColor:\"black\", padding:\"2px 5px 2px 5px\",  marginRight:\"5px\"}}>UNLOCK</button>\r\n                        }else{\r\n                          uButton = null\r\n                          bButton = <button className=\"btn btn-danger\" disabled style={{backgroundColor:\"red\", fontSize:\"12px\", borderColor:\"red\", padding:\"2px 5px 2px 5px\", marginRight:\"5px\"}}>LOCKED</button>\r\n                        }\r\n                      }else{\r\n                        if(secureStorage.getItem('user') === \"super@user.com\"){\r\n                          bButton = null\r\n                          uButton = <button className=\"btn btn-danger\" disabled onClick={()=>this.unlock(json.rows[i].filename)} style={{fontSize:\"12px\", borderColor:\"black\", padding:\"2px 5px 2px 5px\",  marginRight:\"5px\"}}>LOCKED ISSUED</button>\r\n                        }else{\r\n                          bButton = null\r\n                          uButton = <button className=\"btn btn-danger\" disabled onClick={()=>this.unlock(json.rows[i].filename)} style={{fontSize:\"12px\", borderColor:\"black\", padding:\"2px 5px 2px 5px\",  marginRight:\"5px\"}}>LOCKED</button>\r\n                        }\r\n                        \r\n                      }\r\n                    }else{\r\n                      bButton = null\r\n                      uButton = null\r\n                    }\r\n\r\n                    if(json.rows[i].verifydesign === 1 && json.rows[i].user !== \"None\"){\r\n                      row = {key:i, id: <Link onClick={() => this.getMaster(json.rows[i].filename)}>{json.rows[i].filename}</Link> , revision: revision, date: json.rows[i].updated_at.toString().substring(0,10) + \" \"+ json.rows[i].updated_at.toString().substring(11,19), from: json.rows[i].from, to: json.rows[i].to, user: this.state.acronyms[json.rows[i].role] + \" - \" + json.rows[i].user, actions: <div> <button disabled className=\"btn btn-sm btn-warning\" style={{fontSize:\"12px\", padding:\"2px 5px 2px 5px\", marginRight:\"5px\"}}>PENDING</button> {pButton} {iButton} {bButton} {uButton} {uButton} </div>}\r\n                    }else if(json.rows[i].verifydesign === 1 && json.rows[i].user === \"None\"){\r\n                      row = {key:i, id: <Link onClick={() => this.getMaster(json.rows[i].filename)}>{json.rows[i].filename}</Link> , revision: revision, date: json.rows[i].updated_at.toString().substring(0,10) + \" \"+ json.rows[i].updated_at.toString().substring(11,19), from: json.rows[i].from, to: json.rows[i].to, user: json.rows[i].user, actions: <div> <button disabled className=\"btn btn-sm btn-warning\" style={{fontSize:\"12px\", padding:\"2px 5px 2px 5px\", marginRight:\"5px\"}}>PENDING</button> {pButton} {iButton} {bButton} {uButton} </div>}\r\n                    }else if(json.rows[i].claimed === 1){\r\n                      if(json.rows[i].issued === 1 && this.props.currentTab === \"Issued\"){\r\n                        row = {key:i, id: <Link onClick={() => this.getMaster(json.rows[i].filename)}>{json.rows[i].filename}</Link> , revision: revision, date: json.rows[i].updated_at.toString().substring(0,10) + \" \"+ json.rows[i].updated_at.toString().substring(11,19), from: json.rows[i].from, to: json.rows[i].to, user: this.state.acronyms[json.rows[i].role] + \" - \" + json.rows[i].user, actions: <div> <button className=\"btn btn-success\"  disabled style={{fontSize:\"12px\", padding:\"2px 5px 2px 5px\", marginRight: \"5px\"}}>CLAIMED</button> {pButton} {iButton} {bButton} {uButton} </div>}\r\n                      }else if (json.rows[i].issued !== 1 && this.props.currentTab === \"LDE/IsoControl\"){\r\n                        row = {key:i, id: <Link onClick={() => this.getMaster(json.rows[i].filename)}>{json.rows[i].filename}</Link> , revision: revision, date: json.rows[i].updated_at.toString().substring(0,10) + \" \"+ json.rows[i].updated_at.toString().substring(11,19), from: json.rows[i].from, to: json.rows[i].to, user: this.state.acronyms[json.rows[i].role] + \" - \" + json.rows[i].user, actions: <div> <button className=\"btn btn-success\"  disabled style={{fontSize:\"12px\", padding:\"2px 5px 2px 5px\", marginRight: \"5px\"}}>CLAIMED</button> {pButton} {iButton} {bButton} {uButton} </div>}\r\n                      }else if(this.props.currentTab === \"LDE/IsoControl\" && json.rows[i].issued === 1){\r\n                        row = null\r\n                      }else if(this.props.currentTab === \"Issued\" && json.rows[i].issued !== 1){\r\n                        row = null\r\n                      }else{\r\n                        row = {key:i, id: <Link onClick={() => this.getMaster(json.rows[i].filename)}>{json.rows[i].filename}</Link> , revision: revision, date: json.rows[i].updated_at.toString().substring(0,10) + \" \"+ json.rows[i].updated_at.toString().substring(11,19), from: json.rows[i].from, to: json.rows[i].to, user: this.state.acronyms[json.rows[i].role] + \" - \" + json.rows[i].user, actions: <div> <button className=\"btn btn-success\"  disabled style={{fontSize:\"12px\", padding:\"2px 5px 2px 5px\", marginRight: \"5px\"}}>CLAIMED</button> {pButton} {iButton} {bButton} {uButton} </div>}\r\n                        if(secureStorage.getItem(\"role\") === \"SpecialityLead\" && secureStorage.getItem(\"tab\") !== \"LDE/IsoControl\"){\r\n                          row = {key:i, id: <Link onClick={() => this.getMaster(json.rows[i].filename)}>{json.rows[i].filename}</Link> , revision: revision, date: json.rows[i].updated_at.toString().substring(0,10) + \" \"+ json.rows[i].updated_at.toString().substring(11,19), from: json.rows[i].from, to: json.rows[i].to, user: this.state.acronyms[json.rows[i].role] + \" - \" + json.rows[i].user, actions: <div> <button className=\"btn btn-success\"  disabled style={{fontSize:\"12px\", padding:\"2px 5px 2px 5px\", marginRight: \"5px\"}}>CLAIMED</button> <button className=\"btn btn-danger\" style={{fontSize:\"12px\", padding:\"2px 5px 2px 5px\", marginRight: \"5px\"}} onClick={() => this.props.forceUnclaim(json.rows[i].filename)}>FORCE UNCLAIM</button> {pButton} {iButton} {bButton} {uButton} </div>}\r\n                        }\r\n                      }\r\n                    }else if(json.rows[i].user !== \"None\"){           \r\n                      if(json.rows[i].issued === 1 && this.props.currentTab === \"Issued\"){\r\n                        row = {key:i, id: <Link onClick={() => this.getMaster(json.rows[i].filename)}>{json.rows[i].filename}</Link> ,revision: revision, date: json.rows[i].updated_at.toString().substring(0,10) + \" \"+ json.rows[i].updated_at.toString().substring(11,19), from: json.rows[i].from, to: json.rows[i].to, user: this.state.acronyms[json.rows[i].role] + \" - \" + json.rows[i].user, actions: <div> {pButton} {iButton} {rButton} {bButton} {uButton} </div>}\r\n                      }else if (json.rows[i].issued !== 1 && this.props.currentTab === \"LDE/IsoControl\"){\r\n                        row = {key:i, id: <Link onClick={() => this.getMaster(json.rows[i].filename)}>{json.rows[i].filename}</Link> , revision: revision, date: json.rows[i].updated_at.toString().substring(0,10) + \" \"+ json.rows[i].updated_at.toString().substring(11,19), from: json.rows[i].from, to: json.rows[i].to, user: this.state.acronyms[json.rows[i].role] + \" - \" + json.rows[i].user, actions: <div> {pButton} {iButton} {bButton} {uButton}  </div>}\r\n                      }else if(this.props.currentTab === \"LDE/IsoControl\" && json.rows[i].issued === 1){\r\n                        console.log(\"ASDSA\")\r\n                        row = null\r\n                      }else if(this.props.currentTab === \"Issued\" && json.rows[i].issued !== 1){\r\n                        row = null\r\n                      }else{\r\n                        row = {key:i, id: <Link onClick={() => this.getMaster(json.rows[i].filename)}>{json.rows[i].filename}</Link> , revision: revision, date: json.rows[i].updated_at.toString().substring(0,10) + \" \"+ json.rows[i].updated_at.toString().substring(11,19), from: json.rows[i].from, to: json.rows[i].to, user: this.state.acronyms[json.rows[i].role] + \" - \" + json.rows[i].user, actions: <div> {pButton} {iButton} {bButton} {uButton}  </div>}\r\n                      }\r\n\r\n                    }else{                \r\n                      if(json.rows[i].issued === 1 && this.props.currentTab === \"Issued\"){\r\n                        row = {key:i, id: <Link onClick={() => this.getMaster(json.rows[i].filename)}>{json.rows[i].filename}</Link> , revision: revision, date: json.rows[i].updated_at.toString().substring(0,10) + \" \"+ json.rows[i].updated_at.toString().substring(11,19), from: json.rows[i].from, to: json.rows[i].to, user: json.rows[i].user, actions: <div> {pButton} {iButton} {rButton} {bButton} {uButton} </div>}\r\n                      }else if (json.rows[i].issued !== 1 && this.props.currentTab === \"LDE/IsoControl\"){\r\n                        row = {key:i, id: <Link onClick={() => this.getMaster(json.rows[i].filename)}>{json.rows[i].filename}</Link> , revision: revision, date: json.rows[i].updated_at.toString().substring(0,10) + \" \"+ json.rows[i].updated_at.toString().substring(11,19), from: json.rows[i].from, to: json.rows[i].to, user: json.rows[i].user, actions: <div> {pButton} {iButton} {bButton} {uButton} </div>}\r\n                      }else if(this.props.currentTab === \"LDE/IsoControl\" && json.rows[i].issued === 1){\r\n                        row = null\r\n                      }else if(this.props.currentTab === \"Issued\" && json.rows[i].issued !== 1){\r\n                        row = null\r\n                      }else{\r\n                        row = {key:i, id: <Link onClick={() => this.getMaster(json.rows[i].filename)}>{json.rows[i].filename}</Link> , revision: revision, date: json.rows[i].updated_at.toString().substring(0,10) + \" \"+ json.rows[i].updated_at.toString().substring(11,19), from: json.rows[i].from, to: json.rows[i].to, user: json.rows[i].user, actions: <div> {pButton} {iButton} {bButton} {uButton} </div>}\r\n                      }                   \r\n                    }\r\n                    if(row){\r\n                      if(i % 2 === 0){\r\n                        row[\"color\"] = \"#fff\"\r\n                      }else{\r\n                        row[\"color\"] = \"#eee\"\r\n                      }\r\n                       \r\n                      rows.push(row)\r\n                    }\r\n                    }\r\n                  this.setState({\r\n                    data : rows,\r\n                  });\r\n                  console.log(this.state.data)\r\n              }\r\n          )\r\n          .catch(error => {\r\n              console.log(error);\r\n          })\r\n\r\n        \r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState){\r\n\r\n    if(prevProps !== this.props){\r\n      \r\n      let body \r\n      if(this.props.currentTab === \"Issued\"){\r\n        body ={\r\n          currentTab : \"LDE/IsoControl\"\r\n        }\r\n      }else{\r\n        body ={\r\n          currentTab : this.props.currentTab\r\n        }\r\n      }\r\n      const options = {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(body)\r\n    }\r\n      fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/files\", options)\r\n          .then(response => response.json())\r\n          .then(json => {\r\n                  var rows = []\r\n                  let row = null\r\n                  let pButton, iButton, rButton, bButton, uButton = null\r\n                  \r\n                  for(let i = 0; i < json.rows.length; i++){\r\n                    switch(json.rows[i].spo){\r\n                      case 0:\r\n                        pButton = <button className=\"btn btn-warning\" onClick={() => this.props.sendProcessClick(json.rows[i].filename)} disabled style={{backgroundColor:\"white\", fontSize:\"12px\", borderColor:\"black\", padding:\"2px 5px 2px 5px\", width:\"30px\", marginRight:\"5px\"}}>P</button>\r\n                        break;\r\n                      case 1:\r\n                        pButton = <button className=\"btn btn-warning\" onClick={() => this.props.sendProcessClick(json.rows[i].filename)} disabled style={{backgroundColor:\"yellow\", fontSize:\"12px\", borderColor:\"black\", padding:\"2px 5px 2px 5px\", width:\"30px\", marginRight:\"5px\"}}>P</button>\r\n                        break;\r\n                      case 2:\r\n                        pButton = <button className=\"btn btn-success\" onClick={() => this.props.sendProcessClick(json.rows[i].filename)} disabled style={{fontSize:\"12px\", borderColor:\"black\", padding:\"2px 5px 2px 5px\", width:\"30px\", marginRight:\"5px\"}}>P</button>\r\n                        break; \r\n                      case 3:\r\n                        pButton = <button className=\"btn btn-danger\" onClick={() => this.props.sendProcessClick(json.rows[i].filename)} disabled style={{fontSize:\"12px\", borderColor:\"black\", padding:\"2px 5px 2px 5px\", width:\"30px\", marginRight:\"5px\"}}>P</button>\r\n                        break;\r\n                      case 4:\r\n                        pButton = <button className=\"btn btn-warning\" onClick={() => this.props.sendProcessClick(json.rows[i].filename)} disabled style={{backgroundColor:\"orange\", fontSize:\"12px\", borderColor:\"black\", padding:\"2px 5px 2px 5px\", width:\"30px\", marginRight:\"5px\"}}>P</button>\r\n                        break;\r\n                      case 5:\r\n                        pButton = <button className=\"btn btn-warning\" onClick={() => this.props.sendCancelInstrumentClick(json.rows[i].filename)} disabled style={{backgroundColor:\"lightgray\", fontSize:\"12px\", borderColor:\"black\", padding:\"2px 5px 2px 5px\", width:\"30px\", marginRight:\"5px\"}}>P</button>\r\n                        break;\r\n                      default:  \r\n                        pButton = <button className=\"btn btn-warning\" onClick={() => this.props.sendProcessClick(json.rows[i].filename)} disabled style={{backgroundColor:\"white\", fontSize:\"12px\", borderColor:\"black\", padding:\"2px 5px 2px 5px\", width:\"30px\", marginRight:\"5px\"}}>P</button>      \r\n                    }\r\n                    switch(json.rows[i].sit){\r\n                      case 0:\r\n                        iButton = <button className=\"btn btn-warning\" onClick={() => this.props.sendInstrumentClick(json.rows[i].filename)} disabled style={{backgroundColor:\"white\", fontSize:\"12px\", borderColor:\"black\", padding:\"2px 5px 2px 5px\", width:\"30px\", marginRight:\"5px\"}}>I</button>\r\n                        break;\r\n                      case 1:\r\n                        iButton = <button className=\"btn btn-warning\" onClick={() => this.props.sendInstrumentClick(json.rows[i].filename)} disabled style={{backgroundColor:\"yellow\", fontSize:\"12px\", borderColor:\"black\", padding:\"2px 5px 2px 5px\", width:\"30px\", marginRight:\"5px\"}}>I</button>\r\n                        break;\r\n                      case 2:\r\n                        iButton = <button className=\"btn btn-success\" onClick={() => this.props.sendInstrumentClick(json.rows[i].filename)} disabled style={{fontSize:\"12px\", borderColor:\"black\", padding:\"2px 5px 2px 5px\", width:\"30px\", marginRight:\"5px\"}}>I</button>\r\n                        break; \r\n                      case 3:\r\n                        iButton = <button className=\"btn btn-danger\" onClick={() => this.props.sendInstrumentClick(json.rows[i].filename)} disabled style={{fontSize:\"12px\", borderColor:\"black\", padding:\"2px 5px 2px 5px\", width:\"30px\", marginRight:\"5px\"}}>I</button>\r\n                        break;\r\n                      case 4:\r\n                        iButton = <button className=\"btn btn-warning\" onClick={() => this.props.sendInstrumentClick(json.rows[i].filename)} disabled style={{backgroundColor:\"orange\", fontSize:\"12px\", borderColor:\"black\", padding:\"2px 5px 2px 5px\", width:\"30px\", marginRight:\"5px\"}}>I</button>\r\n                        break;\r\n                      case 5:\r\n                        iButton = <button className=\"btn btn-warning\" onClick={() => this.props.sendCancelInstrumentClick(json.rows[i].filename)} disabled style={{backgroundColor:\"lightgray\", fontSize:\"12px\", borderColor:\"black\", padding:\"2px 5px 2px 5px\", width:\"30px\", marginRight:\"5px\"}}>I</button>\r\n                        break;\r\n                      default:  \r\n                        iButton = <button className=\"btn btn-warning\" onClick={() => this.props.sendInstrumentClick(json.rows[i].filename)} disabled style={{backgroundColor:\"white\", fontSize:\"12px\", borderColor:\"black\", padding:\"2px 5px 2px 5px\", width:\"30px\", marginRight:\"5px\"}}>I</button>      \r\n                    }\r\n                    \r\n                    let revision = \"\"\r\n                    if(this.props.currentTab === \"Issued\"){\r\n                      console.log(json.rows[i].transmittal)\r\n                      revision = \"R\" + String(json.rows[i].revision - 1) + \" - \" + json.rows[i].transmittal + \"/\" + json.rows[i].issued_date\r\n                    }else{\r\n                      revision = \"*R\" + json.rows[i].revision\r\n                    }\r\n\r\n                    if(json.rows[i].requested === 1){\r\n                      rButton = <button className=\"btn btn-danger\" disabled style={{backgroundColor:\"yellow\", fontSize:\"12px\", borderColor:\"black\", padding:\"2px 5px 2px 5px\", width:\"30px\", marginRight:\"5px\"}}>R</button>\r\n                    }else if(json.rows[i].requested !== 1 && json.rows[i].requested !== 2){\r\n                      rButton = <button className=\"btn btn-warning\" disabled style={{backgroundColor:\"white\", fontSize:\"12px\", borderColor:\"black\", padding:\"2px 5px 2px 5px\", width:\"30px\", marginRight:\"5px\"}}>R</button>\r\n                    }else if(json.rows[i].requested === 2){\r\n                      rButton = <button className=\"btn btn-success\" disabled style={{fontSize:\"12px\", borderColor:\"black\", padding:\"2px 5px 2px 5px\", width:\"30px\", marginRight:\"5px\"}}>R</button>\r\n                    }\r\n\r\n                    if(json.rows[i].blocked === 1){\r\n                      if(json.rows[i].revision === 0 && json.rows[i].issued !== 1){\r\n                        if(secureStorage.getItem('user') === \"super@user.com\"){\r\n                          bButton =  <RenamePopUp filename={json.rows[i].filename} rename={this.rename.bind(this)}/>\r\n                          uButton = <button className=\"btn btn-success\" onClick={()=>this.unlock(json.rows[i].filename)} style={{fontSize:\"12px\", borderColor:\"black\", padding:\"2px 5px 2px 5px\",  marginRight:\"5px\"}}>UNLOCK</button>\r\n                        }else{\r\n                          uButton = null\r\n                          bButton = <button className=\"btn btn-danger\" disabled style={{backgroundColor:\"red\", fontSize:\"12px\", borderColor:\"red\", padding:\"2px 5px 2px 5px\", marginRight:\"5px\"}}>LOCKED</button>\r\n                        }\r\n                      }else{\r\n                        if(secureStorage.getItem('user') === \"super@user.com\"){\r\n                          bButton = null\r\n                          uButton = <button className=\"btn btn-danger\" disabled onClick={()=>this.unlock(json.rows[i].filename)} style={{fontSize:\"12px\", borderColor:\"black\", padding:\"2px 5px 2px 5px\",  marginRight:\"5px\"}}>LOCKED ISSUED</button>\r\n                        }else{\r\n                          bButton = null\r\n                          uButton = <button className=\"btn btn-danger\" disabled onClick={()=>this.unlock(json.rows[i].filename)} style={{fontSize:\"12px\", borderColor:\"black\", padding:\"2px 5px 2px 5px\",  marginRight:\"5px\"}}>LOCKED</button>\r\n                        }\r\n                        \r\n                      }\r\n                    }else{\r\n                      bButton = null\r\n                      uButton = null\r\n                    }\r\n\r\n                    if(json.rows[i].verifydesign === 1 && json.rows[i].user !== \"None\"){\r\n                      row = {key:i, id: <Link onClick={() => this.getMaster(json.rows[i].filename)}>{json.rows[i].filename}</Link> , revision: revision, date: json.rows[i].updated_at.toString().substring(0,10) + \" \"+ json.rows[i].updated_at.toString().substring(11,19), from: json.rows[i].from, to: json.rows[i].to, user: this.state.acronyms[json.rows[i].role] + \" - \" + json.rows[i].user, actions: <div> <button disabled className=\"btn btn-sm btn-warning\" style={{fontSize:\"12px\", padding:\"2px 5px 2px 5px\", marginRight:\"5px\"}}>PENDING</button> {pButton} {iButton} {bButton} {uButton} </div>}\r\n                    }else if(json.rows[i].verifydesign === 1 && json.rows[i].user === \"None\"){\r\n                      row = {key:i, id: <Link onClick={() => this.getMaster(json.rows[i].filename)}>{json.rows[i].filename}</Link> , revision: revision, date: json.rows[i].updated_at.toString().substring(0,10) + \" \"+ json.rows[i].updated_at.toString().substring(11,19), from: json.rows[i].from, to: json.rows[i].to, user: json.rows[i].user, actions: <div> <button disabled className=\"btn btn-sm btn-warning\" style={{fontSize:\"12px\", padding:\"2px 5px 2px 5px\", marginRight:\"5px\"}}>PENDING</button> {pButton} {iButton} {bButton} {uButton} </div>}\r\n                    }else if(json.rows[i].claimed === 1){\r\n                      if(json.rows[i].issued === 1 && this.props.currentTab === \"Issued\"){\r\n                        row = {key:i, id: <Link onClick={() => this.getMaster(json.rows[i].filename)}>{json.rows[i].filename}</Link> , revision: revision, date: json.rows[i].updated_at.toString().substring(0,10) + \" \"+ json.rows[i].updated_at.toString().substring(11,19), from: json.rows[i].from, to: json.rows[i].to, user: this.state.acronyms[json.rows[i].role] + \" - \" + json.rows[i].user, actions: <div> <button className=\"btn btn-success\"  disabled style={{fontSize:\"12px\", padding:\"2px 5px 2px 5px\", marginRight: \"5px\"}}>CLAIMED</button> {pButton} {iButton} {bButton} {uButton} </div>}\r\n                      }else if (json.rows[i].issued !== 1 && this.props.currentTab === \"LDE/IsoControl\"){\r\n                        row = {key:i, id: <Link onClick={() => this.getMaster(json.rows[i].filename)}>{json.rows[i].filename}</Link> , revision: revision, date: json.rows[i].updated_at.toString().substring(0,10) + \" \"+ json.rows[i].updated_at.toString().substring(11,19), from: json.rows[i].from, to: json.rows[i].to, user: this.state.acronyms[json.rows[i].role] + \" - \" + json.rows[i].user, actions: <div> <button className=\"btn btn-success\"  disabled style={{fontSize:\"12px\", padding:\"2px 5px 2px 5px\", marginRight: \"5px\"}}>CLAIMED</button> {pButton} {iButton} {bButton} {uButton} </div>}\r\n                      }else if(this.props.currentTab === \"LDE/IsoControl\" && json.rows[i].issued === 1){\r\n                        row = null\r\n                      }else if(this.props.currentTab === \"Issued\" && json.rows[i].issued !== 1){\r\n                        row = null\r\n                      }else{\r\n                        row = {key:i, id: <Link onClick={() => this.getMaster(json.rows[i].filename)}>{json.rows[i].filename}</Link> , revision: revision, date: json.rows[i].updated_at.toString().substring(0,10) + \" \"+ json.rows[i].updated_at.toString().substring(11,19), from: json.rows[i].from, to: json.rows[i].to, user: this.state.acronyms[json.rows[i].role] + \" - \" + json.rows[i].user, actions: <div> <button className=\"btn btn-success\"  disabled style={{fontSize:\"12px\", padding:\"2px 5px 2px 5px\", marginRight: \"5px\"}}>CLAIMED</button> {pButton} {iButton} {bButton} {uButton} </div>}\r\n                        if(secureStorage.getItem(\"role\") === \"SpecialityLead\" && secureStorage.getItem(\"tab\") !== \"LDE/IsoControl\"){\r\n                          row = {key:i, id: <Link onClick={() => this.getMaster(json.rows[i].filename)}>{json.rows[i].filename}</Link> , revision: revision, date: json.rows[i].updated_at.toString().substring(0,10) + \" \"+ json.rows[i].updated_at.toString().substring(11,19), from: json.rows[i].from, to: json.rows[i].to, user: this.state.acronyms[json.rows[i].role] + \" - \" + json.rows[i].user, actions: <div> <button className=\"btn btn-success\"  disabled style={{fontSize:\"12px\", padding:\"2px 5px 2px 5px\", marginRight: \"5px\"}}>CLAIMED</button> <button className=\"btn btn-danger\" style={{fontSize:\"12px\", padding:\"2px 5px 2px 5px\", marginRight: \"5px\"}} onClick={() => this.props.forceUnclaim(json.rows[i].filename)}>FORCE UNCLAIM</button> {pButton} {iButton} {bButton} {uButton} </div>}\r\n                        }\r\n                      }\r\n                    }else if(json.rows[i].user !== \"None\"){           \r\n                      if(json.rows[i].issued === 1 && this.props.currentTab === \"Issued\"){\r\n                        row = {key:i, id: <Link onClick={() => this.getMaster(json.rows[i].filename)}>{json.rows[i].filename}</Link> ,revision: revision, date: json.rows[i].updated_at.toString().substring(0,10) + \" \"+ json.rows[i].updated_at.toString().substring(11,19), from: json.rows[i].from, to: json.rows[i].to, user: this.state.acronyms[json.rows[i].role] + \" - \" + json.rows[i].user, actions: <div> {pButton} {iButton} {rButton} {bButton} {uButton} </div>}\r\n                      }else if (json.rows[i].issued !== 1 && this.props.currentTab === \"LDE/IsoControl\"){\r\n                        row = {key:i, id: <Link onClick={() => this.getMaster(json.rows[i].filename)}>{json.rows[i].filename}</Link> , revision: revision, date: json.rows[i].updated_at.toString().substring(0,10) + \" \"+ json.rows[i].updated_at.toString().substring(11,19), from: json.rows[i].from, to: json.rows[i].to, user: this.state.acronyms[json.rows[i].role] + \" - \" + json.rows[i].user, actions: <div> {pButton} {iButton} {bButton} {uButton}  </div>}\r\n                      }else if(this.props.currentTab === \"LDE/IsoControl\" && json.rows[i].issued === 1){\r\n                        console.log(\"ASDSA\")\r\n                        row = null\r\n                      }else if(this.props.currentTab === \"Issued\" && json.rows[i].issued !== 1){\r\n                        row = null\r\n                      }else{\r\n                        row = {key:i, id: <Link onClick={() => this.getMaster(json.rows[i].filename)}>{json.rows[i].filename}</Link> , revision: revision, date: json.rows[i].updated_at.toString().substring(0,10) + \" \"+ json.rows[i].updated_at.toString().substring(11,19), from: json.rows[i].from, to: json.rows[i].to, user: this.state.acronyms[json.rows[i].role] + \" - \" + json.rows[i].user, actions: <div> {pButton} {iButton} {bButton} {uButton}  </div>}\r\n                      }\r\n\r\n                    }else{                \r\n                      if(json.rows[i].issued === 1 && this.props.currentTab === \"Issued\"){\r\n                        row = {key:i, id: <Link onClick={() => this.getMaster(json.rows[i].filename)}>{json.rows[i].filename}</Link> , revision: revision, date: json.rows[i].updated_at.toString().substring(0,10) + \" \"+ json.rows[i].updated_at.toString().substring(11,19), from: json.rows[i].from, to: json.rows[i].to, user: json.rows[i].user, actions: <div> {pButton} {iButton} {rButton} {bButton} {uButton} </div>}\r\n                      }else if (json.rows[i].issued !== 1 && this.props.currentTab === \"LDE/IsoControl\"){\r\n                        row = {key:i, id: <Link onClick={() => this.getMaster(json.rows[i].filename)}>{json.rows[i].filename}</Link> , revision: revision, date: json.rows[i].updated_at.toString().substring(0,10) + \" \"+ json.rows[i].updated_at.toString().substring(11,19), from: json.rows[i].from, to: json.rows[i].to, user: json.rows[i].user, actions: <div> {pButton} {iButton} {bButton} {uButton} </div>}\r\n                      }else if(this.props.currentTab === \"LDE/IsoControl\" && json.rows[i].issued === 1){\r\n                        row = null\r\n                      }else if(this.props.currentTab === \"Issued\" && json.rows[i].issued !== 1){\r\n                        row = null\r\n                      }else{\r\n                        row = {key:i, id: <Link onClick={() => this.getMaster(json.rows[i].filename)}>{json.rows[i].filename}</Link> , revision: revision, date: json.rows[i].updated_at.toString().substring(0,10) + \" \"+ json.rows[i].updated_at.toString().substring(11,19), from: json.rows[i].from, to: json.rows[i].to, user: json.rows[i].user, actions: <div> {pButton} {iButton} {bButton} {uButton} </div>}\r\n                      }                   \r\n                    }\r\n                      if(row){\r\n                        if(i % 2 === 0){\r\n                          row[\"color\"] = \"#fff\"\r\n                        }else{\r\n                          row[\"color\"] = \"#eee\"\r\n                        }\r\n                         \r\n                        rows.push(row)\r\n                      }\r\n                    }\r\n                  this.setState({\r\n                    data : rows,\r\n                  });\r\n              }\r\n          )\r\n          .catch(error => {\r\n              console.log(error);\r\n          })\r\n      }\r\n\r\n  }\r\n\r\n  getMaster(fileName){\r\n    const options = {\r\n      method: \"GET\",\r\n      headers: {\r\n          \"Content-Type\": \"application/pdf\"\r\n      }\r\n    }\r\n    fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/getMaster/\"+fileName, options)\r\n    .then(res => res.blob())\r\n    .then(response => {\r\n      console.log(response)\r\n      const file = new Blob([response], {\r\n        type: \"application/pdf\"\r\n      });\r\n      //Build a URL from the file\r\n      const fileURL = URL.createObjectURL(file);\r\n      //Open the URL on new Window\r\n      window.open(fileURL);\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  \r\n  getColumnSearchProps = dataIndex => ({\r\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n      <div style={{ padding: 8 }}>\r\n        <Input\r\n          ref={node => {\r\n            this.searchInput = node;\r\n          }}\r\n          placeholder={`Search ${dataIndex}`}\r\n          value={selectedKeys[0]}\r\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n          onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n        />\r\n        <Space>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n            icon={<SearchOutlined />}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            Search\r\n          </Button>\r\n          <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n            Reset\r\n          </Button>\r\n          <Button\r\n            type=\"link\"\r\n            size=\"small\"\r\n            onClick={() => {\r\n              confirm({ closeDropdown: false });\r\n              this.setState({\r\n                searchText: selectedKeys[0],\r\n                searchedColumn: dataIndex,\r\n              });\r\n            }}\r\n          >\r\n            Filter\r\n          </Button>\r\n        </Space>\r\n      </div>\r\n    ),\r\n    filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\r\n    onFilter: (value, record) =>\r\n\r\n    this.state.searchedColumn === \"id\" ? (\r\n      record.id.props.children\r\n        ? record.id.props.children.toString().toLowerCase().includes(value.toLowerCase())\r\n        : ''\r\n      ) : (\r\n        record[dataIndex]\r\n          ? record[dataIndex].toString().toLowerCase().includes(value.toLowerCase())\r\n          : ''\r\n      ),\r\n\r\n    onFilterDropdownVisibleChange: visible => {\r\n      if (visible) {\r\n        setTimeout(() => this.searchInput.select(), 100);\r\n      }\r\n    },\r\n    render: text => \r\n    text.props && text.type !== \"div\" ? (\r\n      <Link onClick={() => this.getMaster(text.props.children)}>{text.props.children}</Link>\r\n    ) : this.state.searchedColumn === dataIndex ? (\r\n      <Highlighter\r\n        highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\r\n        searchWords={[this.state.searchText]}\r\n        autoEscape\r\n        textToHighlight={text ? text : ''}\r\n      />\r\n    ) : (\r\n      text\r\n    ),\r\n      \r\n  });\r\n\r\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    this.setState({\r\n      searchText: selectedKeys[0],\r\n      searchedColumn: dataIndex,\r\n    });\r\n  };\r\n\r\n  handleReset = clearFilters => {\r\n    clearFilters();\r\n    this.setState({ searchText: '' });\r\n  };\r\n\r\n  onSelectChange = (selectedRowKeys, selectedRows) => {\r\n    let ids = []\r\n    for(let i = 0; i < selectedRows.length; i++){\r\n      ids.push(selectedRows[i].id.props.children)\r\n    }\r\n    this.setState({\r\n      selectedRowsKeys: selectedRowKeys,\r\n      selectedRows: selectedRows\r\n    })\r\n    //this.setState({ selectedRows: selectedRows });\r\n    this.props.onChange(ids);\r\n    \r\n  };\r\n  \r\n\r\n  render() {\r\n    const selectedRows = this.state.selectedRows;\r\n    const selectedRowsKeys = this.state.selectedRowsKeys;\r\n    const rowSelection = {\r\n      onChange: (selectedRowKeys, selectedRows) => {\r\n        this.onSelectChange(selectedRowKeys, selectedRows);\r\n      },\r\n      getCheckboxProps: (record) => record.actions.props.children[5] ?(\r\n        {\r\n        \r\n        disabled: record.actions.props.children[1].props.children === 'CLAIMED'| (record.actions.props.children[1].props.children === 'PENDING' && (secureStorage.getItem(\"role\") !== \"DesignLead\" && secureStorage.getItem(\"role\") !== \"StressLead\" && secureStorage.getItem(\"role\") !== \"SupportsLead\" && secureStorage.getItem(\"role\") !== \"SpecialityLead\")) | (record.actions.props.children[1].props.children !== 'PENDING' && this.props.currentTab !== \"Issued\" && (secureStorage.getItem(\"role\") === \"DesignLead\" | secureStorage.getItem(\"role\") === \"StressLead\" | secureStorage.getItem(\"role\") === \"SupportsLead\") || record.actions.props.children[5].props.className === \"btn btn-success\"),\r\n        // Column configuration not to be checked\r\n        name: record.name,\r\n      }) : ({\r\n        disabled: record.actions.props.children[1].props.children === 'CLAIMED'| (record.actions.props.children[1].props.children === 'PENDING' && (secureStorage.getItem(\"role\") !== \"DesignLead\" && secureStorage.getItem(\"role\") !== \"StressLead\" && secureStorage.getItem(\"role\") !== \"SupportsLead\" && secureStorage.getItem(\"role\") !== \"SpecialityLead\")) | (record.actions.props.children[1].props.children !== 'PENDING' && (secureStorage.getItem(\"role\") === \"DesignLead\" | secureStorage.getItem(\"role\") === \"StressLead\" | secureStorage.getItem(\"role\") === \"SupportsLead\")),\r\n        // Column configuration not to be checked\r\n        name: record.name,\r\n      }),\r\n    };\r\n    if(localStorage.getItem(\"update\") === \"true\"){\r\n      this.setState({\r\n        selectedRows: [],\r\n        selectedRowsKeys: []\r\n      })\r\n      rowSelection.selectedRowKeys = []\r\n      rowSelection.selectedRows = []\r\n      localStorage.setItem(\"update\", false)\r\n    }else{\r\n      rowSelection.selectedRowKeys = selectedRowsKeys \r\n      rowSelection.selectedRows = selectedRows;\r\n    }  \r\n    \r\n    \r\n    const columns = [\r\n      {\r\n        title: <center className=\"dataTable__header__text\">ISO ID</center>,\r\n        dataIndex: 'id',\r\n        key: 'id',\r\n        width: '15%',\r\n        ...this.getColumnSearchProps('id'),\r\n        sorter:{\r\n          compare: (a, b) => a.id.props.children.localeCompare(b.id.props.children),\r\n        },\r\n      },\r\n      {\r\n        title: <center className=\"dataTable__header__text\">Revision</center>,\r\n        dataIndex: 'revision',\r\n        key: 'revision',\r\n        ...this.getColumnSearchProps('revision'),\r\n        sorter:{\r\n          compare: (a, b) => a.id.props.children.localeCompare(b.id.props.children),\r\n        },\r\n      },\r\n      {\r\n        title: <div className=\"dataTable__header__text\">Date</div>,\r\n        dataIndex: 'date',\r\n        key: 'date',\r\n        width: '10%',\r\n        ...this.getColumnSearchProps('date'),\r\n        sorter: {\r\n          compare: (a, b) => a.date.replace(/\\D/g,'') - b.date.replace(/\\D/g,''),\r\n        },\r\n      },\r\n      {\r\n        title: <div className=\"dataTable__header__text\">From</div>,\r\n        dataIndex: 'from',\r\n        key: 'from',\r\n        width: '10%',\r\n        ...this.getColumnSearchProps('from'),\r\n        sorter: {\r\n          compare: (a, b) => { return a.from.localeCompare(b.from)},\r\n        },\r\n      },\r\n      {\r\n        title: <div className=\"dataTable__header__text\">To</div>,\r\n        dataIndex: 'to',\r\n        key: 'to',\r\n        widht: '15%',\r\n        ...this.getColumnSearchProps('to'),\r\n        sorter: {\r\n          compare: (a, b) => { return a.to.localeCompare(b.to)},\r\n        },\r\n      },\r\n      {\r\n        title: <div className=\"dataTable__header__text\">User</div>,\r\n        dataIndex: 'user',\r\n        key: 'user',\r\n        width:'20%',\r\n        ...this.getColumnSearchProps('user'),\r\n        sorter: {\r\n          compare: (a, b) => { return a.user.localeCompare(b.user)},\r\n        },\r\n      },\r\n      {\r\n        title: <div className=\"dataTable__header__text\">Actions</div>,\r\n        dataIndex: 'actions',\r\n        key: 'actions',\r\n        ...this.getColumnSearchProps('actions'),\r\n        sorter: {\r\n          compare: (a, b) => a.actions.localeCompare(b.actions),\r\n        },\r\n      },\r\n    ];\r\n\r\n    var totalElements = null;\r\n    if (this.state.data.length === 0){\r\n      totalElements = null;\r\n    }else{\r\n      totalElements = (<div style={{position: \"absolute\", bottom: 25, left:0}}>\r\n      <b>Total elements: {this.state.data.length}</b>\r\n     </div>);\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {this.state.updateData}\r\n        <div className=\"dataTable__container\">\r\n        <Table className=\"customTable\" bordered = {true} rowSelection={{type: 'checkbox', ...rowSelection}} columns={columns} dataSource={this.state.data} pagination={{ pageSize: this.props.pagination  }} size=\"small\" rowClassName= {(record) => record.color.replace('#', '')}/>\r\n          {totalElements}\r\n        </div>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DataTable;","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\stateTable\\stateTable.js",["262","263","264","265","266","267","268"],"//Tabla de estado de IsoTracker\r\n\r\nimport \"./stateTable.css\"\r\nimport React, { useState , useEffect} from 'react'\r\n\r\nconst StateTable = props =>{\r\n\r\n    const [designR0, setDesignR0] = useState(0)\r\n    const [designR1, setDesignR1] = useState(0)\r\n    const [designR2, setDesignR2] = useState(0)\r\n    const [designHold, setDesignHold] = useState(0)\r\n    const [designDeleted, setDesignDeleted] = useState(0)\r\n    const [designStock, setDesignStock] = useState(0)\r\n    const [stressR0, setStressR0] = useState(0)\r\n    const [stressR1, setStressR1] = useState(0)\r\n    const [stressR2, setStressR2] = useState(0)\r\n    const [stressHold, setStressHold] = useState(0)\r\n    const [stressDeleted, setStressDeleted] = useState(0)\r\n    const [stressStock, setStressStock] = useState(0)\r\n    const [supportsR0, setSupportsR0] = useState(0)\r\n    const [supportsR1, setSupportsR1] = useState(0)\r\n    const [supportsR2, setSupportsR2] = useState(0)\r\n    const [supportsHold, setSupportsHold] = useState(0)\r\n    const [supportsDeleted, setSupportsDeleted] = useState(0)\r\n    const [supportsStock, setSupportsStock] = useState(0)\r\n    const [materialsR0, setMaterialsR0] = useState(0)\r\n    const [materialsR1, setMaterialsR1] = useState(0)\r\n    const [materialsR2, setMaterialsR2] = useState(0)\r\n    const [materialsHold, setMaterialsHold] = useState(0)\r\n    const [materialsDeleted, setMaterialsDeleted] = useState(0)\r\n    const [materialsStock, setMaterialsStock] = useState(0)\r\n    const [issuerR0, setIssuerR0] = useState(0)\r\n    const [issuerR1, setIssuerR1] = useState(0)\r\n    const [issuerR2, setIssuerR2] = useState(0)\r\n    const [issuerHold, setIssuerHold] = useState(0)\r\n    const [issuerDeleted, setIssuerDeleted] = useState(0)\r\n    const [issuerStock, setIssuerStock] = useState(0)\r\n    const [toIssueR0, setToIssueR0] = useState(0)\r\n    const [toIssueR1, setToIssueR1] = useState(0)\r\n    const [toIssueR2, setToIssueR2] = useState(0)\r\n    const [toIssueHold, setToIssueHold] = useState(0)\r\n    const [toIssueDeleted, setToIssueDeleted] = useState(0)\r\n    const [toIssueStock, setToIssueStock] = useState(0)\r\n    const [issuedR0, setIssuedR0] = useState(0)\r\n    const [issuedR1, setIssuedR1] = useState(0)\r\n    const [issuedR2, setIssuedR2] = useState(0)\r\n    const [issuedDeleted, setIssuedDeleted] = useState(0)\r\n    const [issuedStock, setIssuedStock] = useState(0)\r\n    const [totalR0, setTotalR0] = useState(0)\r\n    const [totalR1, setTotalR1] = useState(0)\r\n    const [totalR2, setTotalR2] = useState(0)\r\n    const [totalHold, setTotalHold] = useState(0)\r\n    const [totalDeleted, setTotalDeleted] = useState(0)\r\n    const [totalStock, setTotalStock] = useState(0)\r\n    const [model, setModel] = useState(0)\r\n\r\n    const [progress, setProgress] = useState(0)\r\n    const [progressIso, setProgressIso] = useState(0)\r\n    const [realProgress, setRealProgress] = useState(0)\r\n    const [realProgressISO, setRealProgressIso] = useState(0)\r\n\r\n    const [realProgressTD, setRealProgressTD] = useState()\r\n    const [realProgressIsoTD, setRealProgressIsoTD] = useState()\r\n    const [realProgressTDValue, setRealProgressTDValue] = useState()\r\n    const [realProgressIsoTDValue, setRealProgressIsoTDValue] = useState()\r\n\r\n    const [pISOHeaderTD, setpISOHeaderTD] = useState()\r\n    const [pISOValueTD, setpISOValueTD] = useState()\r\n\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    useEffect(async ()=>{\r\n        if(loading){\r\n            if(process.env.REACT_APP_PROGRESS === \"0\"){\r\n                fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/updateStatus\")\r\n                .then(response => response.json())\r\n                .then(json => {\r\n                    setDesignR0(json[\"designR0\"])\r\n                    setDesignR1(json[\"designR1\"])\r\n                    setDesignR2(json[\"designR2\"])\r\n                    setDesignHold(json[\"designHold\"])\r\n                    setDesignDeleted(json[\"designDeleted\"])\r\n                    setDesignStock(json[\"designStock\"])\r\n                    setStressR0(json[\"stressR0\"])\r\n                    setStressR1(json[\"stressR1\"])\r\n                    setStressR2(json[\"stressR2\"])\r\n                    setStressHold(json[\"stressHold\"])\r\n                    setStressDeleted(json[\"stressDeleted\"])\r\n                    setStressStock(json[\"stressStock\"])\r\n                    setSupportsR0(json[\"supportsR0\"])\r\n                    setSupportsR1(json[\"supportsR1\"])\r\n                    setSupportsR2(json[\"supportsR2\"])\r\n                    setSupportsHold(json[\"supportsHold\"])\r\n                    setSupportsDeleted(json[\"supportsDeleted\"])\r\n                    setSupportsStock(json[\"supportsStock\"])\r\n                    setMaterialsR0(json[\"materialsR0\"])\r\n                    setMaterialsR1(json[\"materialsR1\"])\r\n                    setMaterialsR2(json[\"materialsR2\"])\r\n                    setMaterialsHold(json[\"materialsHold\"])\r\n                    setMaterialsDeleted(json[\"materialsDeleted\"])\r\n                    setMaterialsStock(json[\"materialsStock\"])\r\n                    setIssuerR0(json[\"issuerR0\"])\r\n                    setIssuerR1(json[\"issuerR1\"])\r\n                    setIssuerR2(json[\"issuerR2\"])\r\n                    setIssuerHold(json[\"issuerHold\"])\r\n                    setIssuerDeleted(json[\"issuerDeleted\"])\r\n                    setIssuerStock(json[\"issuerStock\"])\r\n                    setToIssueR0(json[\"toIssueR0\"])\r\n                    setToIssueR1(json[\"toIssueR1\"])\r\n                    setToIssueR2(json[\"toIssueR2\"])\r\n                    setToIssueHold(json[\"toIssueHold\"])\r\n                    setToIssueDeleted(json[\"toIssueDeleted\"])\r\n                    setToIssueStock(json[\"toIssueStock\"])\r\n                    setIssuedR0(json[\"issuedR0\"])\r\n                    setIssuedR1(json[\"issuedR1\"])\r\n                    setIssuedR2(json[\"issuedR2\"])\r\n                    setIssuedDeleted(json[\"issuedDeleted\"])\r\n                    setIssuedStock(json[\"issuedStock\"])\r\n                    setTotalR0(json[\"totalR0\"])\r\n                    setTotalR1(json[\"totalR1\"])\r\n                    setTotalR2(json[\"totalR2\"])\r\n                    setTotalHold(json[\"totalHold\"])\r\n                    setTotalDeleted(json[\"totalDeleted\"])\r\n                    setTotalStock(json[\"totalStock\"])\r\n                    \r\n                }) \r\n            }else{\r\n                fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/updateStatus\")\r\n                    .then(response => response.json())\r\n                    .then(json => {\r\n                        console.log(json[\"model\"])\r\n                        setDesignR0(json[\"designR0\"])\r\n                    setDesignR1(json[\"designR1\"])\r\n                    setDesignR2(json[\"designR2\"])\r\n                    setDesignHold(json[\"designHold\"])\r\n                    setDesignDeleted(json[\"designDeleted\"])\r\n                    setDesignStock(json[\"designStock\"])\r\n                    setStressR0(json[\"stressR0\"])\r\n                    setStressR1(json[\"stressR1\"])\r\n                    setStressR2(json[\"stressR2\"])\r\n                    setStressHold(json[\"stressHold\"])\r\n                    setStressDeleted(json[\"stressDeleted\"])\r\n                    setStressStock(json[\"stressStock\"])\r\n                    setSupportsR0(json[\"supportsR0\"])\r\n                    setSupportsR1(json[\"supportsR1\"])\r\n                    setSupportsR2(json[\"supportsR2\"])\r\n                    setSupportsHold(json[\"supportsHold\"])\r\n                    setSupportsDeleted(json[\"supportsDeleted\"])\r\n                    setSupportsStock(json[\"supportsStock\"])\r\n                    setMaterialsR0(json[\"materialsR0\"])\r\n                    setMaterialsR1(json[\"materialsR1\"])\r\n                    setMaterialsR2(json[\"materialsR2\"])\r\n                    setMaterialsHold(json[\"materialsHold\"])\r\n                    setMaterialsDeleted(json[\"materialsDeleted\"])\r\n                    setMaterialsStock(json[\"materialsStock\"])\r\n                    setIssuerR0(json[\"issuerR0\"])\r\n                    setIssuerR1(json[\"issuerR1\"])\r\n                    setIssuerR2(json[\"issuerR2\"])\r\n                    setIssuerHold(json[\"issuerHold\"])\r\n                    setIssuerDeleted(json[\"issuerDeleted\"])\r\n                    setIssuerStock(json[\"issuerStock\"])\r\n                    setToIssueR0(json[\"toIssueR0\"])\r\n                    setToIssueR1(json[\"toIssueR1\"])\r\n                    setToIssueR2(json[\"toIssueR2\"])\r\n                    setToIssueHold(json[\"toIssueHold\"])\r\n                    setToIssueDeleted(json[\"toIssueDeleted\"])\r\n                    setToIssueStock(json[\"toIssueStock\"])\r\n                    setIssuedR0(json[\"issuedR0\"])\r\n                    setIssuedR1(json[\"issuedR1\"])\r\n                    setIssuedR2(json[\"issuedR2\"])\r\n                    setIssuedDeleted(json[\"issuedDeleted\"])\r\n                    setIssuedStock(json[\"issuedStock\"])\r\n                    setTotalR0(json[\"totalR0\"])\r\n                    setTotalR1(json[\"totalR1\"])\r\n                    setTotalR2(json[\"totalR2\"])\r\n                    setTotalHold(json[\"totalHold\"])\r\n                    setTotalDeleted(json[\"totalDeleted\"])\r\n                    setTotalStock(json[\"totalStock\"])\r\n                    setModel(json[\"modelCount\"])\r\n                    }) \r\n                    const options = {\r\n                        method: \"GET\",\r\n                    }\r\n                    fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/currentProgressISO\", options)\r\n                    .then(response => response.json())\r\n                    .then(async json =>{\r\n                        console.log(json)\r\n                         await setProgressIso([json.progressISO, json.realprogressISO])\r\n                    })\r\n                    \r\n                    fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/currentProgress\", options)\r\n                    .then(response => response.json())\r\n                    .then(async json =>{\r\n                        console.log(json)\r\n                         await setProgress([json.progress, json.realprogress])\r\n                    })\r\n    \r\n            }\r\n\r\n            if(props.currentRole === \"SpecialityLead\"){\r\n                await setRealProgressTD(<td  className=\"statusTable__header\" style={{backgroundColor:\"orange\"}}>R.P.</td>)\r\n                await setRealProgressIsoTD(<td  className=\"statusTable__header\" style={{backgroundColor:\"orange\", borderRadius:\"0 1em 0 0\"}}>R.P. ISO</td>)\r\n                await setRealProgressTDValue(<td rowSpan=\"6\" className=\"statusTable__state\">{progress[1]}%</td>)\r\n                await setRealProgressIsoTDValue(<td rowSpan=\"6\" className=\"statusTable__state\" style={{borderRadius:\"0 0 1em 0\"}}>{progressIso[1]}%</td>)\r\n                await setpISOHeaderTD(<td  className=\"statusTable__header\" style={{backgroundColor:\"orange\"}}>P.ISO</td>)\r\n                await setpISOValueTD(<td rowSpan=\"6\" className=\"statusTable__state\">{progressIso[0]}%</td>)\r\n            }else{\r\n                await setRealProgressTD(null)\r\n                await setRealProgressIsoTD(null)\r\n                await setRealProgressTDValue(null)\r\n                await setRealProgressIsoTDValue(null)\r\n                await setpISOHeaderTD(<td  className=\"statusTable__header\" style={{backgroundColor:\"orange\", borderRadius:\"0 1em 0 0\"}}>P.ISO</td>)\r\n                await setpISOValueTD(<td rowSpan=\"6\" className=\"statusTable__state\" style={{borderRadius:\"0 0 1em 0\"}}>{progressIso[0]}%</td>)\r\n            }\r\n            console.log(\"eontrooorn\")\r\n            await setLoading(false)\r\n        }\r\n        \r\n        \r\n    },[loading])\r\n\r\n    useEffect(async ()=>{\r\n        setLoading(true)\r\n    }, [props.updateData, props.currentRole])\r\n\r\n    \r\n\r\n    return (\r\n        \r\n        <td className=\"statusTable__td\">\r\n            <table className=\"statusTable__table\">\r\n                <tbody className=\"statusTable__body\">\r\n                    <tr>\r\n                        <td  className=\"statusTable__header\" style={{backgroundColor: \"purple\", borderRadius:\"1em 0 0 0\"}}>M:{model}</td>\r\n                        <td  className=\"statusTable__header\" >Design</td>\r\n                        <td  className=\"statusTable__header\" >Stress</td>\r\n                        <td  className=\"statusTable__header\" >Supports</td>\r\n                        <td  className=\"statusTable__header\" >Materials</td>\r\n                        <td  className=\"statusTable__header\" >Issuer</td>\r\n                        <td  className=\"statusTable__header\" >To issue</td>\r\n                        <td  className=\"statusTable__header\" style={{backgroundColor:\"#00a000\"}}>Issued</td>\r\n                        <td  className=\"statusTable__header\" style={{backgroundColor:\"blue\"}}>Total</td>\r\n                        <td  className=\"statusTable__header\" style={{backgroundColor:\"orange\"}}>P.</td>\r\n                        {pISOHeaderTD}\r\n                        {realProgressTD}\r\n                        {realProgressIsoTD}\r\n                    </tr>\r\n                    <tr>\r\n                        <td className=\"statusTable__header\" style={{backgroundColor:\"white\", color:\"gray\"}}>R0</td>\r\n                        <td className=\"statusTable__state\">{designR0}</td>\r\n                        <td className=\"statusTable__state\">{stressR0}</td>\r\n                        <td className=\"statusTable__state\">{supportsR0}</td>\r\n                        <td className=\"statusTable__state\">{materialsR0}</td>\r\n                        <td className=\"statusTable__state\">{issuerR0}</td>\r\n                        <td className=\"statusTable__state\">{toIssueR0}</td>\r\n                        <td className=\"statusTable__state\">{issuedR0}</td>   \r\n                        <td className=\"statusTable__state\">{totalR0}</td>  \r\n                        <td rowSpan=\"6\" className=\"statusTable__state\">{progress[0]}%</td>  \r\n                        {pISOValueTD}  \r\n                        {realProgressTDValue}\r\n                        {realProgressIsoTDValue} \r\n                    </tr>\r\n                    <tr>\r\n                        <td className=\"statusTable__header\" style={{backgroundColor:\"#d1ebf7\", color:\"gray\"}}>R1</td>\r\n                        <td className=\"statusTable__state_R1\">{designR1}</td>\r\n                        <td className=\"statusTable__state_R1\">{stressR1}</td>\r\n                        <td className=\"statusTable__state_R1\">{supportsR1}</td>\r\n                        <td className=\"statusTable__state_R1\">{materialsR1}</td>\r\n                        <td className=\"statusTable__state_R1\">{issuerR1}</td>\r\n                        <td className=\"statusTable__state_R1\">{toIssueR1}</td>\r\n                        <td className=\"statusTable__state_R1\">{issuedR1}</td>   \r\n                        <td className=\"statusTable__state_R1\">{totalR1}</td> \r\n                  </tr>\r\n                  <tr>\r\n                        <td className=\"statusTable__header\" style={{backgroundColor:\"lightblue\", color:\"gray\"}}>R2</td>\r\n                        <td className=\"statusTable__state_R2\">{designR2}</td>\r\n                        <td className=\"statusTable__state_R2\">{stressR2}</td>\r\n                        <td className=\"statusTable__state_R2\">{supportsR2}</td>\r\n                        <td className=\"statusTable__state_R2\">{materialsR2}</td>\r\n                        <td className=\"statusTable__state_R2\">{issuerR2}</td>\r\n                        <td className=\"statusTable__state_R2\">{toIssueR2}</td>\r\n                        <td className=\"statusTable__state_R2\">{issuedR2}</td>   \r\n                        <td className=\"statusTable__state_R2\">{totalR2}</td> \r\n                  </tr>\r\n                  <tr>\r\n                        <td className=\"statusTable__header\" style={{backgroundColor:\"red\"}}>On hold</td>\r\n                        <td className=\"statusTable__state\">{designHold}</td>\r\n                        <td className=\"statusTable__state\">{stressHold}</td>\r\n                        <td className=\"statusTable__state\">{supportsHold}</td>\r\n                        <td className=\"statusTable__state\">{materialsHold}</td>\r\n                        <td className=\"statusTable__state\">{issuerHold}</td>\r\n                        <td className=\"statusTable__state\">{toIssueHold}</td>\r\n                        <td className=\"statusTable__state\">-</td>   \r\n                        <td className=\"statusTable__state\">{totalHold}</td> \r\n                  </tr>\r\n                  <tr>\r\n                        <td className=\"statusTable__header\" style={{backgroundColor:\"grey\"}}>Deleted</td>\r\n                        <td className=\"statusTable__state\">{designDeleted}</td>\r\n                        <td className=\"statusTable__state\">{stressDeleted}</td>\r\n                        <td className=\"statusTable__state\">{supportsDeleted}</td>\r\n                        <td className=\"statusTable__state\">{materialsDeleted}</td>\r\n                        <td className=\"statusTable__state\">{issuerDeleted}</td>\r\n                        <td className=\"statusTable__state\">{toIssueDeleted}</td>\r\n                        <td className=\"statusTable__state\">{issuedDeleted}</td>   \r\n                        <td className=\"statusTable__state\">{totalDeleted}</td> \r\n                  </tr>\r\n                  <tr>\r\n                        <td className=\"statusTable__header\" style={{backgroundColor:\"blue\", borderRadius:\"0 0 0 1em\"}}>Stock</td>\r\n                        <td className=\"statusTable__state\">{designStock}</td>\r\n                        <td className=\"statusTable__state\">{stressStock}</td>\r\n                        <td className=\"statusTable__state\">{supportsStock}</td>\r\n                        <td className=\"statusTable__state\">{materialsStock}</td>\r\n                        <td className=\"statusTable__state\">{issuerStock}</td>\r\n                        <td className=\"statusTable__state\">{toIssueStock}</td>\r\n                        <td className=\"statusTable__state\">{issuedStock}</td>   \r\n                        <td className=\"statusTable__state\" style={{fontWeight:\"bold\", color:\"black\"}}>{totalStock}</td>\r\n                  </tr>\r\n                </tbody>\r\n            </table>\r\n        </td>\r\n    );\r\n};\r\n\r\nexport default StateTable;","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\commentBox\\commentBox.js",[],["269","270"],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\actionExtra\\actionExtra.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\actionBtns\\actionBtns.js",["271","272"],"//Botones de accion que aparecen en cada fase de isotracker para tratar los archivos\r\nimport ForceClaimPopUp from '../forceClaimPopUp/forceClaimPopUp';\r\nimport ActionExtra from \"../../components/actionExtra/actionExtra\"\r\nimport CancelIso from \"../../components/cancelIso/cancelIso\"\r\nimport HoldComment from '../../components/holdComment/holdComment';\r\n\r\nconst ActionBtns = props =>{\r\n    function assignToUser(username){\r\n        props.forceClaim(username)\r\n    }\r\n    \r\n    function toIssue(transmittal, date){\r\n        props.issue(transmittal, date)\r\n    }\r\n\r\n    function returnIso(destiny, comments){\r\n        props.returnIso(destiny, comments)\r\n    }\r\n\r\n    function sendHolds(comments){\r\n        props.transaction(\"On hold\",comments)\r\n    }\r\n\r\n    var actionBtn1, actionBtn2, actionBtn3, actionBtn4, actionBtn5, actionBtn6, actionBtn7, actionBtn8, actionBtn9, actionBtn10, actionBtn11, actionBtn12\r\n    if(props.onlyDownload){\r\n        if(props.role === \"SpecialityLead\" || props.role === \"DesignLead\"){\r\n            console.log(\"entra\")\r\n            actionBtn6 = <button className=\"btn btn-sm btn-danger\" name=\"destination\" value=\"stress\" style={{marginRight:\"5px\", marginLeft:\"5px\", width:\"110px\"}} onClick={() => props.transaction(\"Recycle bin\")}>Delete</button>\r\n            actionBtn7 = <HoldComment sendHolds={sendHolds.bind(this)}/>\r\n        }\r\n        actionBtn11 = <button className=\"btn btn-sm\" name=\"destination\" value=\"stress\" style={{marginRight:\"5px\", marginLeft:\"5px\", width:\"110px\", backgroundColor:\"lightgray\"}} onClick={() => props.downloadFiles()}>Download</button>\r\n    }else{\r\n        \r\n        if (props.currentTab !== \"My Tray\" && props.currentTab !== \"Recycle bin\" && props.currentTab !== \"On hold\"){\r\n            actionBtn11 = <button className=\"btn btn-sm\" name=\"destination\" value=\"stress\" style={{marginRight:\"5px\", marginLeft:\"5px\", width:\"110px\", backgroundColor:\"lightgray\"}} onClick={() => props.downloadFiles()}>Download</button>\r\n            if (!(props.role === \"SpecialityLead\" && (props.currentTab === \"Process\" || props.currentTab === \"Instrument\")) && props.currentTab !== \"Issued\"){\r\n                actionBtn1 = <button class=\"btn btn-sm btn-success\" name=\"destination\" value=\"stress\" style={{marginRight:\"5px\", marginLeft:\"5px\", width:\"110px\"}} onClick={() => props.claimClick()}>Claim</button>\r\n            }\r\n            if(props.currentTab === \"Issued\"){\r\n                \r\n                if(props.role === \"SpecialityLead\"){\r\n                    actionBtn1 = <button class=\"btn btn-sm btn-success\" name=\"newrev\" value=\"newrev\" style={{marginRight:\"5px\", marginLeft:\"5px\", width:\"110px\"}} onClick={() => props.newRev()}>New Rev</button>\r\n                }else if(props.role === \"Design\" || props.role === \"DesignLead\"){\r\n                    actionBtn1 = <button class=\"btn btn-sm btn-success\" name=\"newrev\" value=\"newrev\" style={{marginRight:\"5px\", marginLeft:\"5px\", width:\"110px\"}} onClick={() => props.request()}>Request</button>\r\n                }\r\n            }\r\n    \r\n        }if (props.currentTab === \"My Tray\"){\r\n            actionBtn1 = <button className=\"btn btn-sm btn-warning\" name=\"destination\" value=\"stress\" style={{marginRight:\"5px\", marginLeft:\"5px\", width:\"110px\"}} onClick={() => props.unclaimClick()}>Unclaim</button>\r\n            actionBtn11 = <button className=\"btn btn-sm\" name=\"destination\" value=\"stress\" style={{marginRight:\"5px\", marginLeft:\"5px\", width:\"110px\", backgroundColor:\"lightgray\"}} onClick={() => props.downloadFiles()}>Download</button>\r\n            if(props.role !== \"Design\" && props.role !== \"DesignLead\" && props.role !== \"Process\" && props.role !== \"Instrument\" && props.role !== \"StressLead\" && props.role !== \"SupportsLead\" ){\r\n                if(props.role === \"Stress\"){\r\n                    actionBtn2 = <button class=\"btn btn-sm btn-danger\" style={{marginRight:\"5px\", marginLeft:\"5px\", width:\"110px\", backgroundColor:\"#781C2E\"}} onClick={() => props.returnIso(\"Design\",\"\")}>Design</button>\r\n                }else{\r\n                    actionBtn2 = <CancelIso returnIso={returnIso.bind(this)} role={props.role}/>\r\n                }\r\n            }\r\n            if(props.role === \"DesignLead\" || props.role === \"StressLead\" || props.role === \"SupportsLead\"){\r\n                actionBtn9 = <button class=\"btn btn-sm\" name=\"destination\" value=\"stress\" style={{marginRight:\"5px\", marginLeft:\"5px\", width:\"110px\", backgroundColor: \"#8B008B\", color:\"white\"}} onClick={() => props.transaction(\"Materials\")}>Materials</button>\r\n            }if(props.role === \"Materials\"){\r\n                actionBtn5 = <button class=\"btn btn-sm\" name=\"destination\" value=\"stress\" style={{marginRight:\"5px\", marginLeft:\"5px\", width:\"110px\", backgroundColor: \"#FF6781\", color:\"white\"}} onClick={() => props.transaction(\"Issuer\")}>Issuer</button>\r\n            }if(props.role === \"Issuer\"){\r\n                actionBtn5 = <button class=\"btn btn-sm\" name=\"destination\" value=\"stress\" style={{marginRight:\"5px\", marginLeft:\"5px\", width:\"110px\", backgroundColor: \"\t#FF8C00\", color:\"white\"}} onClick={() => props.transaction(\"LDE/Isocontrol\")}>LOS/Isoctrl</button>\r\n            }\r\n            if(process.env.REACT_APP_IFC === \"0\"){\r\n                if (props.role !== \"Stress\" && props.role !== \"StressLead\"){\r\n                    actionBtn3 = <button class=\"btn btn-sm btn-info\" style={{marginRight:\"5px\", marginLeft:\"5px\", width:\"110px\"}} onClick={() => props.transaction(\"Stress\")}>Stress</button>\r\n                } if (props.role !== \"Supports\" && props.role !== \"SupportsLead\"){\r\n                    actionBtn4 = <button class=\"btn btn-sm btn-primary\" style={{marginRight:\"5px\", marginLeft:\"5px\", width:\"110px\"}} onClick={() => props.transaction(\"Supports\")}>Support</button>\r\n                }\r\n                if(props.role !== \"DesignLead\" && props.role !== \"StressLead\" && props.role !== \"SupportsLead\" && props.role !== \"Process\" && props.role !== \"Instrument\"){\r\n                    actionBtn5= <button className=\"btn btn-sm btn-success\" name=\"destination\" value=\"stress\" style={{marginRight:\"5px\", marginLeft:\"5px\", width:\"110px\"}} onClick={() => props.verifyClick()}>Verify</button>\r\n                }\r\n            }else{\r\n                if(props.role === \"DesignLead\"){\r\n                    actionBtn3 = <button class=\"btn btn-sm btn-primary\" style={{marginRight:\"5px\", marginLeft:\"5px\", width:\"110px\"}} onClick={() => props.transaction(\"Stress\")}>Stress</button>\r\n                    actionBtn4 = <button class=\"btn btn-sm btn-info\" style={{marginRight:\"5px\", marginLeft:\"5px\", width:\"110px\"}} onClick={() => props.transaction(\"Supports\")}>Support</button>     \r\n                }else if(props.role === \"Stress\"){\r\n                    actionBtn5= <button className=\"btn btn-sm btn-success\" name=\"destination\" value=\"stress\" style={{marginRight:\"5px\", marginLeft:\"5px\", width:\"110px\"}} onClick={() => props.verifyClick()}>Verify</button>\r\n                    actionBtn3 = <button class=\"btn btn-sm btn-primary\" style={{marginRight:\"5px\", marginLeft:\"5px\", width:\"110px\"}} onClick={() => props.transaction(\"Supports\")}>Supports</button>\r\n                }else if(props.role === \"Supports\"){\r\n                    actionBtn5= <button className=\"btn btn-sm btn-success\" name=\"destination\" value=\"stress\" style={{marginRight:\"5px\", marginLeft:\"5px\", width:\"110px\"}} onClick={() => props.verifyClick()}>Verify</button>\r\n                    actionBtn3 = <button class=\"btn btn-sm btn-primary\" style={{marginRight:\"5px\", marginLeft:\"5px\", width:\"110px\"}} onClick={() => props.returnIso(\"Stress\", \"\")}>Stress</button>\r\n                }else if(props.role === \"SupportsLead\"){\r\n                    actionBtn3 = <button class=\"btn btn-sm btn-primary\" style={{marginRight:\"5px\", marginLeft:\"5px\", width:\"110px\"}} onClick={() => props.returnIso(\"Supports\", \"\")}>Supports</button>\r\n\r\n                }else if (props.role !== \"Process\" && props.role !== \"Instrument\" && props.role !== \"StressLead\" && props.role !== \"SupportsLead\" && props.role !== \"Materials\" && props.role !== \"Issuer\"){\r\n                    actionBtn3 = <button className=\"btn btn-sm btn-success\" name=\"destination\" value=\"stress\" style={{marginRight:\"5px\", marginLeft:\"5px\", width:\"110px\"}} onClick={() => props.verifyClick()}>Verify</button>\r\n\r\n                }\r\n            }\r\n            \r\n            if(props.role === \"DesignLead\"){\r\n                actionBtn2 = <button class=\"btn btn-sm btn-danger\" style={{marginRight:\"5px\", marginLeft:\"5px\", width:\"110px\", backgroundColor:\"#781C2E\"}} onClick={() => returnIso(\"Design\", \"\")}>Design</button>               \r\n            }if(props.role === \"SpecialityLead\"){\r\n                actionBtn3 = actionBtn1\r\n                actionBtn1 = <ActionExtra toIssue={toIssue.bind(this)} role={props.role}/>\r\n                actionBtn2 = <CancelIso returnIso={returnIso.bind(this)} role={props.role}/>\r\n                actionBtn5 = null\r\n            }\r\n            else if(props.role === \"StressLead\"){\r\n                actionBtn2 = <button class=\"btn btn-sm btn-info\" style={{marginRight:\"5px\", marginLeft:\"5px\", width:\"110px\"}} onClick={() => props.returnIso(\"Stress\", \"\")}>Stress</button>\r\n                actionBtn4 = <button class=\"btn btn-sm btn-primary\" style={{marginRight:\"5px\", marginLeft:\"5px\", width:\"110px\"}} onClick={() => props.transaction(\"Supports\")}>Supports</button>\r\n            }\r\n            else if(props.role === \"SupportsLead\"){\r\n                actionBtn3 = <button class=\"btn btn-sm btn-info\" style={{marginRight:\"5px\", marginLeft:\"5px\", width:\"110px\"}} onClick={() => props.returnLeadStress()}>LDG Stress</button>\r\n                actionBtn4 = <button class=\"btn btn-sm btn-primary\" style={{marginRight:\"5px\", marginLeft:\"5px\", width:\"110px\"}} onClick={() => props.returnIso(\"Supports\", \"\")}>Supports</button>\r\n                \r\n            }\r\n\r\n            \r\n        \r\n        }else if(props.role === \"SpecialityLead\" && props.currentTab !== \"LDE/IsoControl\" && props.currentTab !== \"Process\" &&  props.currentTab !== \"Instrument\" && props.currentTab !== \"Issued\" && props.currentTab !== \"Recycle bin\" && props.currentTab !== \"On hold\"){\r\n            actionBtn10 = <ForceClaimPopUp currentTab={props.currentTab} assignToUser={assignToUser.bind(this)}/>\r\n            actionBtn1 = null\r\n        }\r\n        \r\n        if ((props.currentTab === \"Recycle bin\" && (props.role === \"DesignLead\" || props.role === \"SpecialityLead\")) || \r\n            (props.currentTab === \"On hold\" && (props.role === \"DesignLead\" || props.role === \"SpecialityLead\" || props.role === \"Issuer\"))){\r\n            actionBtn8 = <button className=\"btn btn-sm btn-success\" style={{marginRight:\"5px\", marginLeft:\"5px\", width:\"110px\"}} onClick={() => props.restoreClick()}>Restore</button>\r\n        }\r\n        if((props.role === \"SpecialityLead\" || props.role === \"DesignLead\") && props.currentTab !== \"Recycle bin\" && props.currentTab !== \"On hold\" && props.currentTab != \"Process\" && props.currentTab != \"Instrument\"){\r\n            actionBtn6 = <button className=\"btn btn-sm btn-danger\" name=\"destination\" value=\"stress\" style={{marginRight:\"5px\", marginLeft:\"5px\", width:\"110px\"}} onClick={() => props.transaction(\"Recycle bin\")}>Delete</button>\r\n            actionBtn7 = <HoldComment sendHolds={sendHolds.bind(this)}/>\r\n        }\r\n        if(props.currentTab === \"Status\"){\r\n            actionBtn1 = null\r\n            actionBtn6 = null\r\n            actionBtn7 = null\r\n            actionBtn10 = null\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div style={{display:\"flex\"}}>\r\n            {actionBtn1}\r\n            {actionBtn2}\r\n            {actionBtn3}\r\n            {actionBtn4}\r\n            {actionBtn5}\r\n            {actionBtn9}\r\n            {actionBtn6}\r\n            \r\n            {actionBtn7}\r\n            {actionBtn8}\r\n            \r\n            {actionBtn10}\r\n            {actionBtn11}\r\n            {actionBtn12}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ActionBtns;","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\selectPag\\selectPag.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\progressTable\\progressTable.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\checkInTable\\checkInTable.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\navBar\\navBar.js",["273"],"//Cabecera de IsoTracker con diferentes desplegables y botones\r\n\r\nimport React, { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport TechnipLogo from \"../../assets/images/tpenr_logo.svg\"\r\nimport Icapp from \"../../assets/images/client.png\"\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport './navBar.css';\r\nimport {useHistory} from \"react-router\";\r\n\r\nconst CryptoJS = require(\"crypto-js\");\r\nconst SecureStorage = require(\"secure-web-storage\");\r\nvar SECRET_KEY = 'sanud2ha8shd72h';\r\n\r\nvar secureStorage = new SecureStorage(localStorage, {\r\n    hash: function hash(key) {\r\n        key = CryptoJS.SHA256(key, SECRET_KEY);\r\n\r\n        return key.toString();\r\n    },\r\n    encrypt: function encrypt(data) {\r\n        data = CryptoJS.AES.encrypt(data, SECRET_KEY);\r\n\r\n        data = data.toString();\r\n\r\n        return data;\r\n    },\r\n    decrypt: function decrypt(data) {\r\n        data = CryptoJS.AES.decrypt(data, SECRET_KEY);\r\n\r\n        data = data.toString(CryptoJS.enc.Utf8);\r\n\r\n        return data;\r\n    }\r\n});\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n  }));\r\n\r\nconst NavBar = (props) =>{\r\n    const classes = useStyles();\r\n    const [anchorElUser, setAnchorElUser] = React.useState(null);\r\n    const [anchorElIso, setAnchorElIso] = React.useState(null);\r\n    const history = useHistory();\r\n    const[username, setUsername] = React.useState(\"\");\r\n\r\n    const handleClickUser = (event) => {\r\n        console.log(event.currentTarget)\r\n        setAnchorElUser(event.currentTarget);\r\n    };\r\n\r\n    const handleCloseUser = () => {\r\n        setAnchorElUser(null);\r\n    };\r\n\r\n    const handleClickIsotracker = () => {\r\n        history.push(\"/\"+process.env.REACT_APP_PROJECT+\"/isotracker\");\r\n    };\r\n\r\n    const handleLogOut = () => {\r\n        localStorage.clear();\r\n        history.push(\"/\"+process.env.REACT_APP_PROJECT);\r\n    };\r\n    const handleHome = () =>{\r\n        setAnchorElUser(null);\r\n        setAnchorElIso(null);\r\n        history.push(\"/\"+process.env.REACT_APP_PROJECT+\"/isotracker\");\r\n    }\r\n    const handleChangePassword = () =>{\r\n        setAnchorElUser(null);\r\n        setAnchorElIso(null);\r\n        history.push(\"/\"+process.env.REACT_APP_PROJECT+\"/changepassword\");\r\n    }\r\n\r\n    const handleClickEquipments = () =>{\r\n        history.push(\"/\"+process.env.REACT_APP_PROJECT+\"/equipments\");\r\n    }\r\n\r\n    useEffect(() =>{\r\n        const bodyUsername = {\r\n            email: secureStorage.getItem(\"user\")\r\n          }\r\n        const optionsUsername = {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(bodyUsername)\r\n        }\r\n        fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/api/findByEmail\", optionsUsername)\r\n        .then(response => response.json())\r\n        .then(json => {\r\n            setUsername(json.name);\r\n        })\r\n    })\r\n    return(\r\n        <div className={classes.root}>\r\n            <AppBar position=\"fixed\" className=\"navBar__container\" style={{borderBottomColor: \"rgb(211, 224, 233)\", borderLeftColor: \"rgb(211, 224, 233)\", bordeRightColor: \"rgb(211, 224, 233)\", borderTopColor: \"rgb(211, 224, 233)\", backgroundColor: \"white\"}}>\r\n                <Toolbar>\r\n                    <a className=\"navbar-brand\" style={{float:\"left\", paddingLeft: \"20px\"}} href={\"/\"+process.env.REACT_APP_PROJECT+\"/isotracker\"}>\r\n                        <img src={TechnipLogo} alt=\"technipLogo\" style={{height:\"50px\"}}/>\r\n                    </a>\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                    \r\n                    </Typography>\r\n                    <Button onClick={handleClickEquipments} style={{marginRight:\"25px\"}}>\r\n                        <i className=\"dropdown__text\">Equipments </i>\r\n                    </Button>\r\n                    <Button onClick={handleClickIsotracker} style={{marginRight:\"25px\"}}>\r\n                        <i className=\"dropdown__text\">Isotracker </i>\r\n                    </Button>\r\n                    \r\n                    <li className=\"icapp__button\"><a href={\"/\"+process.env.REACT_APP_PROJECT+\"/\"}><strong className=\"icapp__text\">{process.env.REACT_APP_APP_NAMEPROJ}</strong></a></li>\r\n                     \r\n                    <a className=\"navbar-brand\" href={\"/\"+process.env.REACT_APP_PROJECT+\"/\"}>\r\n                        <img src={Icapp} className=\"icapp__image\" alt=\"icappImage\"/>\r\n                    </a>\r\n                    \r\n                    <Button aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClickUser}>\r\n                    <i className=\"dropdown__text\">{username}</i>&nbsp;<b className=\"dropdown__arrow\">▼</b>\r\n                    </Button>\r\n                    <Menu\r\n                        id=\"simple-menu\"\r\n                        anchorEl={anchorElUser}\r\n                        getContentAnchorEl={null}\r\n                        anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\r\n                        transformOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n                        open={Boolean(anchorElUser)}\r\n                        onClose={handleCloseUser}\r\n                        PaperProps={{\r\n                            style: {\r\n                            left: '50%',\r\n                            transform: 'translateX(+140%)',\r\n                            }\r\n                        }}\r\n                    >\r\n                    <MenuItem style={{fontFamily:\"Quicksand\", fontSize:\"13.33px\"}} onClick={handleHome}>Home</MenuItem>\r\n                    <MenuItem style={{fontFamily:\"Quicksand\", fontSize:\"13.33px\"}} onClick={handleChangePassword}>Change password</MenuItem>\r\n                    <MenuItem style={{fontFamily:\"Quicksand\", fontSize:\"13.33px\"}} onClick={handleLogOut}><b>Logout</b></MenuItem>\r\n                    </Menu>\r\n \r\n                    \r\n\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NavBar;","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\myTrayTable\\myTrayTable.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\myTrayBtn\\myTrayBtn.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\binTable\\binTable.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\navBtns\\navBtns.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\statusDataTable\\statusDataTable.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\menuList\\menuList.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\binBtn\\binBtn.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\cancelIso\\cancelIso.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\uploadPopUp\\uploadPopUp.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\chooseFile\\chooseFile.js",[],["274","275"],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\dragAndDrop\\dragAndDrop.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\pages\\loginPage\\loginPage.js",["276"],"import React,{ useState} from 'react';\r\nimport Login from '../../components/login/login';\r\n\r\nimport './login.css';\r\n//Página de home con el menú para ir a las aplicaciones de isotracker\r\n\r\nconst LoginPage = () =>{\r\n    document.title= process.env.REACT_APP_APP_NAMEPROJ\r\n\r\n    return(\r\n        <body>\r\n            <div className=\"home__background\">\r\n                \r\n                <Login/>\r\n  );\r\n            </div>\r\n            \r\n        </body>\r\n    );\r\n};\r\n\r\nexport default LoginPage;","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\login\\login.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\roleDropDown\\roleDropDown.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\onHoldTable\\onHoldTable.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\onHoldBtn\\onHoldBtn.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\historyDataTable\\historyDataTable.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\procInsBtn\\procInsBtn.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\procInstTable\\procInstTable.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\uploadProcInst\\uploadProcInst.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\reportsBtn\\reportsBtn.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\reportBoxBtns\\reportBoxBtns.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\forceClaimPopUp\\forceClaimPopUp.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\uploadReportPopUp\\uploadReportPopUp.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\issuedBtn\\issuedBtn.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\pages\\changePassword\\changePassword.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\progressBtn\\progressBtn.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\progressPlot\\progressPlot.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\modelledBtn\\modelledBtn.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\modelledDataTable\\modelledDataTable.js",["277","278"],"import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Table, Input, Button, Space } from 'antd';\r\nimport Highlighter from 'react-highlight-words';\r\nimport { SearchOutlined } from '@ant-design/icons';\r\n\r\n\r\nconst CryptoJS = require(\"crypto-js\");\r\n    const SecureStorage = require(\"secure-web-storage\");\r\n    var SECRET_KEY = 'sanud2ha8shd72h';\r\n    \r\n    var secureStorage = new SecureStorage(localStorage, {\r\n        hash: function hash(key) {\r\n            key = CryptoJS.SHA256(key, SECRET_KEY);\r\n    \r\n            return key.toString();\r\n        },\r\n        encrypt: function encrypt(data) {\r\n            data = CryptoJS.AES.encrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString();\r\n    \r\n            return data;\r\n        },\r\n        decrypt: function decrypt(data) {\r\n            data = CryptoJS.AES.decrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString(CryptoJS.enc.Utf8);\r\n    \r\n            return data;\r\n        }\r\n    });\r\n\r\nclass ModelledDataTable extends React.Component{\r\n  state = {\r\n    searchText: '',\r\n    searchedColumn: '',\r\n    data: [],\r\n    tab: this.props.currentTab,\r\n    selectedRows: [],\r\n    selectedRowsKeys: [],\r\n    updateData: this.props.updateData,\r\n    username: \"\",\r\n    acronyms : null\r\n  };\r\n\r\n  \r\n\r\n  componentDidMount(){\r\n\r\n    const options = {\r\n        method: \"GET\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n    }\r\n\r\n    fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/api/modelled\", options)\r\n      .then(response => response.json())\r\n      .then(json => {\r\n        var rows = []\r\n        var row = null\r\n        for(let i = 0; i < json.rows.length; i++){\r\n            row = {key:i, id: json.rows[i].isoid, tag: json.rows[i].tag, type: json.rows[i].code.toString()}\r\n            rows.push(row)\r\n            }\r\n        \r\n        this.setState({data : rows, selectedRows: []});\r\n\r\n    }) \r\n  }\r\n\r\n  \r\n  getColumnSearchProps = dataIndex => ({\r\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n      <div style={{ padding: 8 }}>\r\n        <Input\r\n          ref={node => {\r\n            this.searchInput = node;\r\n          }}\r\n          placeholder={`Search ${dataIndex}`}\r\n          value={selectedKeys[0]}\r\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n          onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n        />\r\n        <Space>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n            icon={<SearchOutlined />}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            Search\r\n          </Button>\r\n          <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n            Reset\r\n          </Button>\r\n          <Button\r\n            type=\"link\"\r\n            size=\"small\"\r\n            onClick={() => {\r\n              confirm({ closeDropdown: false });\r\n              this.setState({\r\n                searchText: selectedKeys[0],\r\n                searchedColumn: dataIndex,\r\n              });\r\n            }}\r\n          >\r\n            Filter\r\n          </Button>\r\n        </Space>\r\n      </div>\r\n    ),\r\n    filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\r\n    onFilter: (value, record) =>\r\n\r\n\r\n      \r\n        record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\r\n          \r\n\r\n\r\n    onFilterDropdownVisibleChange: visible => {\r\n      if (visible) {\r\n        setTimeout(() => this.searchInput.select(), 100);\r\n      }\r\n    },\r\n    render: text => \r\n      \r\n      text\r\n    \r\n      \r\n  });\r\n\r\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    this.setState({\r\n      searchText: selectedKeys[0],\r\n      searchedColumn: dataIndex,\r\n    });\r\n  };\r\n\r\n  handleReset = clearFilters => {\r\n    clearFilters();\r\n    this.setState({ searchText: '' });\r\n  };\r\n\r\n  onSelectChange = (selectedRowKeys, selectedRows) => {\r\n    let ids = []\r\n    for(let i = 0; i < selectedRows.length; i++){\r\n      ids.push(selectedRows[i].id.props.children)\r\n    }\r\n    this.setState({\r\n      selectedRowsKeys: selectedRowKeys,\r\n      selectedRows: selectedRows\r\n    })\r\n    //this.setState({ selectedRows: selectedRows });\r\n    this.props.onChange(ids);\r\n    \r\n  };\r\n  \r\n\r\n  render() {\r\n\r\n    const columns = [\r\n      {\r\n        title: <center className=\"dataTable__header__text\">TAG</center>,\r\n        dataIndex: 'tag',\r\n        key: 'tag',\r\n        width: '40%',\r\n        ...this.getColumnSearchProps('tag'),\r\n        sorter:{\r\n          compare: (a, b) => a.tag.localeCompare(b.tag),\r\n        },\r\n      },\r\n      {\r\n        title: <center className=\"dataTable__header__text\">ISO ID</center>,\r\n        dataIndex: 'id',\r\n        key: 'id',\r\n        width: '40%',\r\n        ...this.getColumnSearchProps('id'),\r\n        sorter:{\r\n          compare: (a, b) => a.id.localeCompare(b.id),\r\n        },\r\n      },\r\n      {\r\n        title: <div className=\"dataTable__header__text\">Type</div>,\r\n        dataIndex: 'type',\r\n        key: 'type',\r\n        width: '20%',\r\n        ...this.getColumnSearchProps('type'),\r\n        sorter: {\r\n          compare: (a, b) => a.type.localeCompare(b.type),\r\n        },\r\n      },\r\n    ];\r\n\r\n    var totalElements = null;\r\n    if (this.state.data.length === 0){\r\n      totalElements = null;\r\n    }else{\r\n      totalElements = (<div style={{position: \"absolute\", bottom: 25, left:0}}>\r\n      <b>Total elements: {this.state.data.length}</b>\r\n     </div>);\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {this.state.updateData}\r\n        <div className=\"dataTable__container\">\r\n        <Table className=\"customTable\" bordered = {true}  columns={columns} dataSource={this.state.data} pagination={{ pageSize: this.props.pagination  }} size=\"small\"/>\r\n          {totalElements}\r\n        </div>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ModelledDataTable;","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\holdComment\\holdComment.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\renamePopUp\\renamePopUp.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\commentPopUp\\commentPopUp.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\pages\\equipments\\equipments.js",["279","280"],"import \"./equipments.css\"\r\nimport React, { useState , useEffect} from 'react'\r\nimport NavBar from '../../components/navBar/navBar'\r\nimport RoleDropDown from '../../components/roleDropDown/roleDropDown'\r\nimport EquipEstimatedDataTable from \"../../components/equipEstimatedDataTable/equipEstimatedDataTable\"\r\nimport EquipModelledDataTable from \"../../components/equipModelledDataTable/equipModelledDataTable\"\r\nimport EquipmentsNavBtns from \"../../components/EquipmentsNavBtns/equipmentsNavBtns\"\r\nimport SelectPag from \"../../components/selectPag/selectPag\"\r\nimport ProgressPlotEquipments from \"../../components/progressPlotEquipments/progressPlotEquipments\"\r\nimport EquipTypesDataTable from \"../../components/equipTypesDataTable/equipTypesDataTable\"\r\n\r\nconst Equipments = () => {\r\n\r\n    const CryptoJS = require(\"crypto-js\");\r\n    const SecureStorage = require(\"secure-web-storage\");\r\n    var SECRET_KEY = 'sanud2ha8shd72h';\r\n    const [currentRole, setCurrentRole] = useState();\r\n    const [roles, setRoles] = useState();\r\n    const[pagination, setPagination] = useState(8)\r\n    const[weight, setWeight] = useState();\r\n    const[progress, setProgress] = useState();\r\n    \r\n\r\n    useEffect(()=>{\r\n        const body = {\r\n            user: currentUser,\r\n        }\r\n        const options = {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(body)\r\n        }\r\n       \r\n\r\n        fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/api/roles/user\", options)\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                setRoles(json.roles);\r\n                if(secureStorage.getItem('role') !== null){\r\n                    setCurrentRole(secureStorage.getItem('role'))\r\n                }else{\r\n                    secureStorage.setItem('role', json.roles[0])\r\n                    setCurrentRole(secureStorage.getItem('role'))\r\n                }\r\n                }\r\n            )\r\n            .catch(error => {\r\n                console.log(error);\r\n            })       \r\n            \r\n    },[currentRole]);\r\n\r\n    useEffect(()=>{\r\n\r\n        const options = {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n        }\r\n       \r\n\r\n        fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/equipments/weight\", options)\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                setWeight(json.weight)\r\n                setProgress(json.progress)\r\n            }\r\n            )\r\n            .catch(error => {\r\n                console.log(error);\r\n            })       \r\n            \r\n    },[]);\r\n    \r\n    var secureStorage = new SecureStorage(localStorage, {\r\n        hash: function hash(key) {\r\n            key = CryptoJS.SHA256(key, SECRET_KEY);\r\n    \r\n            return key.toString();\r\n        },\r\n        encrypt: function encrypt(data) {\r\n            data = CryptoJS.AES.encrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString();\r\n    \r\n            return data;\r\n        },\r\n        decrypt: function decrypt(data) {\r\n            data = CryptoJS.AES.decrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString(CryptoJS.enc.Utf8);\r\n    \r\n            return data;\r\n        }\r\n    });\r\n\r\n    var dataTableHeight = \"550px\"\r\n    let navBtnsMargin = \"600px\"\r\n\r\n    if (pagination === 8){\r\n        dataTableHeight = \"550px\"\r\n        navBtnsMargin = \"600px\"\r\n    }if(pagination === 25){\r\n        dataTableHeight = \"1250px\"\r\n        navBtnsMargin = \"1200px\"\r\n    }if(pagination === 50){\r\n        dataTableHeight = \"2250px\"\r\n        navBtnsMargin = \"2300px\"\r\n    }if(pagination === 100){\r\n        dataTableHeight = \"4350px\"\r\n    }\r\n\r\n    document.body.style.zoom = 0.9\r\n    document.title= process.env.REACT_APP_APP_NAMEPROJ\r\n    const [currentTab, setCurrentTab] = useState(secureStorage.getItem(\"equip_tab\"))\r\n    if(currentTab === \"\" || currentTab === null){\r\n        setCurrentTab(\"Estimated\")\r\n    }\r\n\r\n    var currentUser = secureStorage.getItem('user')\r\n    var table = null\r\n\r\n    var dataTableHeight = 8\r\n    var pageSelector = <SelectPag onChange={value => setPagination(value)} pagination = {pagination}/>\r\n\r\n\r\n    if(currentTab === \"Estimated\"){\r\n        table = <EquipEstimatedDataTable pagination = {pagination}/>\r\n    }else if(currentTab === \"Modelled\"){\r\n        table = <EquipModelledDataTable pagination = {pagination}/>\r\n    }else if(currentTab === \"Progress\"){\r\n        table = <ProgressPlotEquipments/>\r\n    }else if(currentTab === \"Types\"){\r\n        table = <EquipTypesDataTable/>\r\n    }\r\n\r\n    return(\r\n        \r\n        <body>\r\n            \r\n            <NavBar onChange={value => setCurrentTab(currentTab)}/>\r\n            <div className=\"equipments__container\">  \r\n                <center>\r\n                    <h2 className=\"title__container\">\r\n                        <div className=\"roleSelector__container\">\r\n                            <RoleDropDown style={{paddingLeft: \"2px\"}} onChange={value => setCurrentRole(value)} roles = {roles}/>\r\n                            </div>\r\n                        <b >      \r\n                            <i className=\"iso__title\">Equipments</i>\r\n                        </b>\r\n                    </h2>\r\n                    <h3 className=\"iso__subtitle\">{currentTab}</h3>\r\n                </center>\r\n                <div style={{position: \"absolute\", width:\"50px\"}}>\r\n                  {pageSelector}        \r\n                </div>\r\n                <div style={{display:\"inline\"}}>\r\n                    <div className=\"equipTable__container\">\r\n                        <td className=\"equipTable__td\">\r\n                            <table className=\"equipTable__table\">\r\n                                <tbody className=\"equipable__body\">\r\n                                    <tr>    \r\n                                        <td  className=\"equipTable__header\" style={{backgroundColor:\"rgb(107, 157, 187)\", borderRadius:\"1em 0 0 0\"}}>Estimated weight</td>\r\n                                        <td className=\"equipTable__header\" style={{backgroundColor:\"rgb(107, 157, 187)\", borderRadius:\"0 1em 0 0\"}}>Total progress</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"equipTable__state\" style={{borderRadius:\"0 0 0 1em\"}}>{weight}</td>\r\n                                        <td className=\"equipTable__state\" style={{borderRadius:\"0 0 1em 0\"}}>{progress}%</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </td>\r\n                    </div>\r\n                </div>\r\n\r\n                <div style={{height: dataTableHeight}}>\r\n                    <br></br>\r\n                    <br></br> \r\n                    <br></br> \r\n                    {table}\r\n                </div>         \r\n            </div>\r\n            <center className=\"equimentsNavBtns__center\" style={{marginTop: navBtnsMargin}}>              \r\n                    <EquipmentsNavBtns onChange={value => setCurrentTab(value)} currentTab = {currentTab} currentRole = {currentRole}/>               \r\n            </center>\r\n         </body>\r\n    )\r\n}\r\n\r\nexport default Equipments;","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\EquipmentsNavBtns\\equipmentsNavBtns.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\equipEstimatedDataTable\\equipEstimatedDataTable.js",["281","282"],"import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Table, Input, Button, Space } from 'antd';\r\nimport { SearchOutlined } from '@ant-design/icons';\r\nimport './equipEstimatedDataTable.css'\r\n\r\n\r\nconst CryptoJS = require(\"crypto-js\");\r\n    const SecureStorage = require(\"secure-web-storage\");\r\n    var SECRET_KEY = 'sanud2ha8shd72h';\r\n    \r\n    var secureStorage = new SecureStorage(localStorage, {\r\n        hash: function hash(key) {\r\n            key = CryptoJS.SHA256(key, SECRET_KEY);\r\n    \r\n            return key.toString();\r\n        },\r\n        encrypt: function encrypt(data) {\r\n            data = CryptoJS.AES.encrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString();\r\n    \r\n            return data;\r\n        },\r\n        decrypt: function decrypt(data) {\r\n            data = CryptoJS.AES.decrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString(CryptoJS.enc.Utf8);\r\n    \r\n            return data;\r\n        }\r\n    });\r\n\r\nclass EquipEstimatedDataTable extends React.Component{\r\n  state = {\r\n    searchText: '',\r\n    searchedColumn: '',\r\n    data: [],\r\n    tab: this.props.currentTab,\r\n    selectedRows: [],\r\n    selectedRowsKeys: [],\r\n    updateData: this.props.updateData,\r\n    username: \"\",\r\n    acronyms : null,\r\n    steps: []\r\n  };\r\n\r\n  async componentDidMount(){\r\n\r\n    const options = {\r\n        method: \"GET\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n    }\r\n\r\n\r\n    await fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/equipments/steps\", options)\r\n    .then(response => response.json())\r\n    .then(async json => {\r\n      let percentages = []\r\n      console.log(json.steps[0].percentage)\r\n      for(let i = 0; i < json.steps.length; i++){\r\n        percentages.push(json.steps[i].percentage)\r\n      }\r\n      await this.setState({steps : percentages});\r\n      console.log(this.state.steps)\r\n    }) \r\n\r\n\r\n    fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/equipments/estimated\", options)\r\n      .then(response => response.json())\r\n      .then(json => {\r\n        var rows = []\r\n        var row = null\r\n        \r\n        for(let i = 0; i < json.rows.length; i++){\r\n            let mod = 0\r\n            if(json.rows[i].modelled){\r\n              mod = json.rows[i].modelled\r\n            }\r\n            if(i % 2 === 0){\r\n              row = {key:i, area: json.rows[i].area, type: json.rows[i].type, quantity: json.rows[i].quantity, modelled: mod, color: \"#fff\"}\r\n            }else{\r\n              row = {key:i, area: json.rows[i].area, type: json.rows[i].type, quantity: json.rows[i].quantity, modelled: mod, color: \"#eee\"}\r\n            }\r\n            \r\n            for(let j = 0; j < this.state.steps.length; j++){\r\n              let currentStep = this.state.steps[j].toString()\r\n              row[currentStep] = json.rows[i][currentStep]\r\n            }\r\n            rows.push(row)\r\n        }\r\n        this.setState({data : rows, selectedRows: []});\r\n\r\n    }) \r\n  }\r\n\r\n  \r\n  getColumnSearchProps = dataIndex => ({\r\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n      <div style={{ padding: 8 }}>\r\n        <Input\r\n          ref={node => {\r\n            this.searchInput = node;\r\n          }}\r\n          placeholder={`Search ${dataIndex}`}\r\n          value={selectedKeys[0]}\r\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n          onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n        />\r\n        <Space>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n            icon={<SearchOutlined />}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            Search\r\n          </Button>\r\n          <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n            Reset\r\n          </Button>\r\n          <Button\r\n            type=\"link\"\r\n            size=\"small\"\r\n            onClick={() => {\r\n              confirm({ closeDropdown: false });\r\n              this.setState({\r\n                searchText: selectedKeys[0],\r\n                searchedColumn: dataIndex,\r\n              });\r\n            }}\r\n          >\r\n            Filter\r\n          </Button>\r\n        </Space>\r\n      </div>\r\n    ),\r\n    filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\r\n    onFilter: (value, record) =>\r\n\r\n\r\n      \r\n        record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\r\n          \r\n\r\n\r\n    onFilterDropdownVisibleChange: visible => {\r\n      if (visible) {\r\n        setTimeout(() => this.searchInput.select(), 100);\r\n      }\r\n    },\r\n    render: text => \r\n      \r\n      text\r\n    \r\n      \r\n  });\r\n\r\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    this.setState({\r\n      searchText: selectedKeys[0],\r\n      searchedColumn: dataIndex,\r\n    });\r\n  };\r\n\r\n  handleReset = clearFilters => {\r\n    clearFilters();\r\n    this.setState({ searchText: '' });\r\n  };\r\n\r\n  onSelectChange = (selectedRowKeys, selectedRows) => {\r\n    let ids = []\r\n    for(let i = 0; i < selectedRows.length; i++){\r\n      ids.push(selectedRows[i].id.props.children)\r\n    }\r\n    this.setState({\r\n      selectedRowsKeys: selectedRowKeys,\r\n      selectedRows: selectedRows\r\n    })\r\n    //this.setState({ selectedRows: selectedRows });\r\n    this.props.onChange(ids);\r\n    \r\n  };\r\n  \r\n\r\n  render() {\r\n\r\n    const steps = this.state.steps\r\n\r\n    const columns = [\r\n      {\r\n        title: <center className=\"dataTable__header__text\">Area</center>,\r\n        dataIndex: 'area',\r\n        key: 'area',\r\n        width: '5%',\r\n        ...this.getColumnSearchProps('area'),\r\n        sorter:{\r\n          compare: (a, b) => a.area.localeCompare(b.area),\r\n        },\r\n      },\r\n      {\r\n        title: <center className=\"dataTable__header__text\">Type</center>,\r\n        dataIndex: 'type',\r\n        key: 'type',\r\n        width: '280px',\r\n        ...this.getColumnSearchProps('type'),\r\n        sorter:{\r\n          compare: (a, b) => a.type.localeCompare(b.type),\r\n        },\r\n      },\r\n      {\r\n        title: <div className=\"dataTable__header__text\">Qty</div>,\r\n        dataIndex: 'quantity',\r\n        key: 'quantity',\r\n        width: '5%',\r\n        ...this.getColumnSearchProps('quantity'),\r\n        sorter: {\r\n          compare: (a, b) => a.quantity-b.quantity,\r\n        },\r\n      },\r\n      {\r\n        title: <div className=\"dataTable__header__text\">Modelled</div>,\r\n        dataIndex: 'modelled',\r\n        key: 'modelled',\r\n        width: '5%',\r\n        ...this.getColumnSearchProps('modelled'),\r\n        sorter: {\r\n          compare: (a, b) => a.modelled-b.modelled,\r\n        },\r\n      },\r\n    ];\r\n    \r\n    for(let i = 0; i < this.state.steps.length; i++){\r\n      let index = this.state.steps[i]\r\n      columns.push({\r\n        title: <div className=\"dataTable__header__text\">{this.state.steps[i]}%</div>,\r\n        dataIndex: index,\r\n        key: index,\r\n        ...this.getColumnSearchProps(index),\r\n        sorter: {\r\n          compare: (a, b) => a[index] - b[index],\r\n        },\r\n      })\r\n    }\r\n\r\n    var totalElements = null;\r\n    if (this.state.data.length === 0){\r\n      totalElements = null;\r\n    }else{\r\n      totalElements = (<div style={{position: \"absolute\", bottom: 25, left:0}}>\r\n      <b>Total elements: {this.state.data.length}</b>\r\n     </div>);\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {this.state.updateData}\r\n        <div className=\"estimatedDataTable__container\">\r\n        <Table className=\"customTable\" bordered = {true} columns={columns} dataSource={this.state.data} pagination={{ pageSize: this.props.pagination  }} size=\"small\"\r\n         rowClassName= {(record) => record.color.replace('#', '')}/>\r\n          {totalElements}\r\n        </div>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EquipEstimatedDataTable;","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\equipModelledDataTable\\equipModelledDataTable.js",["283","284","285"],"import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Table, Input, Button, Space } from 'antd';\r\nimport { SearchOutlined } from '@ant-design/icons';\r\n\r\n\r\nconst CryptoJS = require(\"crypto-js\");\r\n    const SecureStorage = require(\"secure-web-storage\");\r\n    var SECRET_KEY = 'sanud2ha8shd72h';\r\n    \r\n    var secureStorage = new SecureStorage(localStorage, {\r\n        hash: function hash(key) {\r\n            key = CryptoJS.SHA256(key, SECRET_KEY);\r\n    \r\n            return key.toString();\r\n        },\r\n        encrypt: function encrypt(data) {\r\n            data = CryptoJS.AES.encrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString();\r\n    \r\n            return data;\r\n        },\r\n        decrypt: function decrypt(data) {\r\n            data = CryptoJS.AES.decrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString(CryptoJS.enc.Utf8);\r\n    \r\n            return data;\r\n        }\r\n    });\r\n\r\nclass EquipModelledDataTable extends React.Component{\r\n  state = {\r\n    searchText: '',\r\n    searchedColumn: '',\r\n    data: [],\r\n    tab: this.props.currentTab,\r\n    selectedRows: [],\r\n    selectedRowsKeys: [],\r\n    updateData: this.props.updateData,\r\n    username: \"\",\r\n    acronyms : null,\r\n    steps: []\r\n  };\r\n\r\n  async componentDidMount(){\r\n\r\n    const options = {\r\n        method: \"GET\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n    }\r\n\r\n    fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/equipments/modelled\", options)\r\n      .then(response => response.json())\r\n      .then(json => {\r\n        var rows = []\r\n        var row = null\r\n        \r\n        for(let i = 0; i < json.rows.length; i++){\r\n            let mod = 0\r\n            if(json.rows[i].modelled){\r\n              mod = json.rows[i].modelled\r\n            }\r\n            if(i % 2 === 0){\r\n              row = {key:i, area: json.rows[i].area, tag: json.rows[i].tag, type: json.rows[i].type, weight: json.rows[i].weight, status: json.rows[i].status, progress: json.rows[i].progress, color: \"#fff\"}\r\n            }else{\r\n              row = {key:i, area: json.rows[i].area, tag: json.rows[i].tag, type: json.rows[i].type, weight: json.rows[i].weight, status: json.rows[i].status, progress: json.rows[i].progress, color: \"#eee\"}\r\n            }\r\n            \r\n            for(let j = 0; j < this.state.steps.length; j++){\r\n              let currentStep = this.state.steps[j].toString()\r\n              row[currentStep] = json.rows[i][currentStep]\r\n            }\r\n            rows.push(row)\r\n        }\r\n        this.setState({data : rows, selectedRows: []});\r\n\r\n    }) \r\n  }\r\n\r\n  \r\n  getColumnSearchProps = dataIndex => ({\r\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n      <div style={{ padding: 8 }}>\r\n        <Input\r\n          ref={node => {\r\n            this.searchInput = node;\r\n          }}\r\n          placeholder={`Search ${dataIndex}`}\r\n          value={selectedKeys[0]}\r\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n          onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n        />\r\n        <Space>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n            icon={<SearchOutlined />}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            Search\r\n          </Button>\r\n          <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n            Reset\r\n          </Button>\r\n          <Button\r\n            type=\"link\"\r\n            size=\"small\"\r\n            onClick={() => {\r\n              confirm({ closeDropdown: false });\r\n              this.setState({\r\n                searchText: selectedKeys[0],\r\n                searchedColumn: dataIndex,\r\n              });\r\n            }}\r\n          >\r\n            Filter\r\n          </Button>\r\n        </Space>\r\n      </div>\r\n    ),\r\n    filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\r\n    onFilter: (value, record) =>\r\n\r\n\r\n      \r\n        record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\r\n          \r\n\r\n\r\n    onFilterDropdownVisibleChange: visible => {\r\n      if (visible) {\r\n        setTimeout(() => this.searchInput.select(), 100);\r\n      }\r\n    },\r\n    render: text => \r\n      \r\n      text\r\n    \r\n      \r\n  });\r\n\r\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    this.setState({\r\n      searchText: selectedKeys[0],\r\n      searchedColumn: dataIndex,\r\n    });\r\n  };\r\n\r\n  handleReset = clearFilters => {\r\n    clearFilters();\r\n    this.setState({ searchText: '' });\r\n  };\r\n\r\n  onSelectChange = (selectedRowKeys, selectedRows) => {\r\n    let ids = []\r\n    for(let i = 0; i < selectedRows.length; i++){\r\n      ids.push(selectedRows[i].id.props.children)\r\n    }\r\n    this.setState({\r\n      selectedRowsKeys: selectedRowKeys,\r\n      selectedRows: selectedRows\r\n    })\r\n    //this.setState({ selectedRows: selectedRows });\r\n    this.props.onChange(ids);\r\n    \r\n  };\r\n  \r\n\r\n  render() {\r\n\r\n    const steps = this.state.steps\r\n\r\n    const columns = [\r\n      {\r\n        title: <center className=\"dataTable__header__text\">Area</center>,\r\n        dataIndex: 'area',\r\n        key: 'area',\r\n        width: '5%',\r\n        ...this.getColumnSearchProps('area'),\r\n        sorter:{\r\n          compare: (a, b) => a.area.localeCompare(b.area),\r\n        },\r\n      },\r\n      {\r\n        title: <center className=\"dataTable__header__text\">Tag</center>,\r\n        dataIndex: 'tag',\r\n        key: 'tag',\r\n        width: '5%',\r\n        ...this.getColumnSearchProps('tag'),\r\n        sorter:{\r\n          compare: (a, b) => a.tag.localeCompare(b.tag),\r\n        },\r\n      },\r\n      {\r\n        title: <center className=\"dataTable__header__text\">Type</center>,\r\n        dataIndex: 'type',\r\n        key: 'type',\r\n        width: '10%',\r\n        ...this.getColumnSearchProps('type'),\r\n        sorter:{\r\n          compare: (a, b) => a.type.localeCompare(b.type),\r\n        },\r\n      },\r\n      {\r\n        title: <div className=\"dataTable__header__text\">Weight</div>,\r\n        dataIndex: 'weight',\r\n        key: 'weight',\r\n        width: '5%',\r\n        ...this.getColumnSearchProps('weight'),\r\n        sorter: {\r\n          compare: (a, b) => a.weight-b.weight,\r\n        },\r\n      },\r\n      {\r\n        title: <center className=\"dataTable__header__text\">Status</center>,\r\n        dataIndex: 'status',\r\n        key: 'status',\r\n        width: '15%',\r\n        ...this.getColumnSearchProps('status'),\r\n        sorter:{\r\n          compare: (a, b) => a.status.localeCompare(b.status),\r\n        },\r\n      },\r\n      {\r\n        title: <center className=\"dataTable__header__text\">Progress</center>,\r\n        dataIndex: 'progress',\r\n        key: 'progress',\r\n        width: '5%',\r\n        ...this.getColumnSearchProps('progress'),\r\n        sorter:{\r\n          compare: (a, b) => a.progress.localeCompare(b.progress),\r\n        },\r\n      },\r\n    ];\r\n    \r\n    \r\n    var totalElements = null;\r\n    if (this.state.data.length === 0){\r\n      totalElements = null;\r\n    }else{\r\n      totalElements = (<div style={{position: \"absolute\", bottom: 25, left:0}}>\r\n      <b>Total elements: {this.state.data.length}</b>\r\n     </div>);\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {this.state.updateData}\r\n        <div className=\"estimatedDataTable__container\">\r\n        <Table className=\"customTable\" bordered = {true} columns={columns} dataSource={this.state.data} pagination={{ defaultCurrent:1, total: this.state.data.length }} size=\"small\"\r\n         rowClassName= {(record) => record.color.replace('#', '')}/>\r\n          {totalElements}\r\n        </div>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EquipModelledDataTable;","C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\progressPlotEquipments\\progressPlotEquipments.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\uploadEquisModelledPopUp\\uploadEquisModelledPopUp.js",[],"C:\\xampp\\htdocs\\isotracker-dev\\isotracker-react\\src\\components\\equipTypesDataTable\\equipTypesDataTable.js",["286","287","288"],"import React from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Table, Input, Button, Space } from 'antd';\r\nimport { SearchOutlined } from '@ant-design/icons';\r\n\r\n\r\nconst CryptoJS = require(\"crypto-js\");\r\n    const SecureStorage = require(\"secure-web-storage\");\r\n    var SECRET_KEY = 'sanud2ha8shd72h';\r\n    \r\n    var secureStorage = new SecureStorage(localStorage, {\r\n        hash: function hash(key) {\r\n            key = CryptoJS.SHA256(key, SECRET_KEY);\r\n    \r\n            return key.toString();\r\n        },\r\n        encrypt: function encrypt(data) {\r\n            data = CryptoJS.AES.encrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString();\r\n    \r\n            return data;\r\n        },\r\n        decrypt: function decrypt(data) {\r\n            data = CryptoJS.AES.decrypt(data, SECRET_KEY);\r\n    \r\n            data = data.toString(CryptoJS.enc.Utf8);\r\n    \r\n            return data;\r\n        }\r\n    });\r\n\r\nclass EquipTypesDataTable extends React.Component{\r\n  state = {\r\n    searchText: '',\r\n    searchedColumn: '',\r\n    data: [],\r\n    tab: this.props.currentTab,\r\n    selectedRows: [],\r\n    selectedRowsKeys: [],\r\n    updateData: this.props.updateData,\r\n    username: \"\",\r\n    acronyms : null,\r\n    steps: []\r\n  };\r\n\r\n  async componentDidMount(){\r\n\r\n    const options = {\r\n        method: \"GET\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n    }\r\n\r\n    fetch(\"http://\"+process.env.REACT_APP_SERVER+\":\"+process.env.REACT_APP_NODE_PORT+\"/equipments/types\", options)\r\n      .then(response => response.json())\r\n      .then(json => {\r\n        var rows = []\r\n        var row = null\r\n        \r\n        for(let i = 0; i < json.rows.length; i++){\r\n            let mod = 0\r\n            if(json.rows[i].modelled){\r\n              mod = json.rows[i].modelled\r\n            }\r\n            if(i % 2 === 0){\r\n              row = {key:i, code: json.rows[i].code, name: json.rows[i].name, weight: json.rows[i].weight, color: \"#fff\"}\r\n            }else{\r\n                row = {key:i, code: json.rows[i].code, name: json.rows[i].name, weight: json.rows[i].weight, color: \"#eee\"}\r\n            }\r\n            \r\n            for(let j = 0; j < this.state.steps.length; j++){\r\n              let currentStep = this.state.steps[j].toString()\r\n              row[currentStep] = json.rows[i][currentStep]\r\n            }\r\n            rows.push(row)\r\n        }\r\n        this.setState({data : rows, selectedRows: []});\r\n\r\n    }) \r\n  }\r\n\r\n  \r\n  getColumnSearchProps = dataIndex => ({\r\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n      <div style={{ padding: 8 }}>\r\n        <Input\r\n          ref={node => {\r\n            this.searchInput = node;\r\n          }}\r\n          placeholder={`Search ${dataIndex}`}\r\n          value={selectedKeys[0]}\r\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n          onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n        />\r\n        <Space>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n            icon={<SearchOutlined />}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            Search\r\n          </Button>\r\n          <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n            Reset\r\n          </Button>\r\n          <Button\r\n            type=\"link\"\r\n            size=\"small\"\r\n            onClick={() => {\r\n              confirm({ closeDropdown: false });\r\n              this.setState({\r\n                searchText: selectedKeys[0],\r\n                searchedColumn: dataIndex,\r\n              });\r\n            }}\r\n          >\r\n            Filter\r\n          </Button>\r\n        </Space>\r\n      </div>\r\n    ),\r\n    filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\r\n    onFilter: (value, record) =>\r\n\r\n\r\n      \r\n        record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\r\n          \r\n\r\n\r\n    onFilterDropdownVisibleChange: visible => {\r\n      if (visible) {\r\n        setTimeout(() => this.searchInput.select(), 100);\r\n      }\r\n    },\r\n    render: text => \r\n      \r\n      text\r\n    \r\n      \r\n  });\r\n\r\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    this.setState({\r\n      searchText: selectedKeys[0],\r\n      searchedColumn: dataIndex,\r\n    });\r\n  };\r\n\r\n  handleReset = clearFilters => {\r\n    clearFilters();\r\n    this.setState({ searchText: '' });\r\n  };\r\n\r\n  onSelectChange = (selectedRowKeys, selectedRows) => {\r\n    let ids = []\r\n    for(let i = 0; i < selectedRows.length; i++){\r\n      ids.push(selectedRows[i].id.props.children)\r\n    }\r\n    this.setState({\r\n      selectedRowsKeys: selectedRowKeys,\r\n      selectedRows: selectedRows\r\n    })\r\n    //this.setState({ selectedRows: selectedRows });\r\n    this.props.onChange(ids);\r\n    \r\n  };\r\n  \r\n\r\n  render() {\r\n\r\n    const steps = this.state.steps\r\n\r\n    const columns = [\r\n      {\r\n        title: <center className=\"dataTable__header__text\">Code</center>,\r\n        dataIndex: 'code',\r\n        key: 'code',\r\n        width: '5%',\r\n        ...this.getColumnSearchProps('code'),\r\n        sorter:{\r\n          compare: (a, b) => a.code.localeCompare(b.code),\r\n        },\r\n      },\r\n      {\r\n        title: <center className=\"dataTable__header__text\">Name</center>,\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n        width: '30%',\r\n        ...this.getColumnSearchProps('name'),\r\n        sorter:{\r\n          compare: (a, b) => a.name.localeCompare(b.name),\r\n        },\r\n      },\r\n      {\r\n        title: <center className=\"dataTable__header__text\">Weight</center>,\r\n        dataIndex: 'weight',\r\n        key: 'weight',\r\n        width: '10%',\r\n        ...this.getColumnSearchProps('weight'),\r\n        sorter:{\r\n          compare: (a, b) => a.weight.localeCompare(b.weight),\r\n        },\r\n      },\r\n      \r\n    ];\r\n    \r\n    \r\n    var totalElements = null;\r\n    if (this.state.data.length === 0){\r\n      totalElements = null;\r\n    }else{\r\n      totalElements = (<div style={{position: \"absolute\", bottom: 25, left:0}}>\r\n      <b>Total elements: {this.state.data.length}</b>\r\n     </div>);\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {this.state.updateData}\r\n        <div className=\"estimatedDataTable__container\">\r\n        <Table className=\"customTable\" bordered = {true} columns={columns} dataSource={this.state.data} pagination={{ defaultCurrent:1, total: this.state.data.length }} size=\"small\"\r\n         rowClassName= {(record) => record.color.replace('#', '')}/>\r\n          {totalElements}\r\n        </div>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EquipTypesDataTable;",{"ruleId":"289","replacedBy":"290"},{"ruleId":"291","replacedBy":"292"},{"ruleId":"293","severity":1,"message":"294","line":57,"column":22,"nodeType":"295","messageId":"296","endLine":57,"endColumn":33},{"ruleId":"293","severity":1,"message":"297","line":58,"column":26,"nodeType":"295","messageId":"296","endLine":58,"endColumn":41},{"ruleId":"293","severity":1,"message":"298","line":59,"column":25,"nodeType":"295","messageId":"296","endLine":59,"endColumn":39},{"ruleId":"293","severity":1,"message":"299","line":60,"column":29,"nodeType":"295","messageId":"296","endLine":60,"endColumn":47},{"ruleId":"293","severity":1,"message":"300","line":102,"column":9,"nodeType":"295","messageId":"296","endLine":102,"endColumn":24},{"ruleId":"301","severity":1,"message":"302","line":153,"column":7,"nodeType":"303","endLine":153,"endColumn":20,"suggestions":"304"},{"ruleId":"305","severity":1,"message":"306","line":1413,"column":129,"nodeType":"307","messageId":"308","endLine":1413,"endColumn":131},{"ruleId":"305","severity":1,"message":"306","line":1414,"column":38,"nodeType":"307","messageId":"308","endLine":1414,"endColumn":40},{"ruleId":"305","severity":1,"message":"306","line":1415,"column":67,"nodeType":"307","messageId":"308","endLine":1415,"endColumn":69},{"ruleId":"305","severity":1,"message":"306","line":1416,"column":64,"nodeType":"307","messageId":"308","endLine":1416,"endColumn":66},{"ruleId":"309","severity":1,"message":"310","line":1419,"column":149,"nodeType":"311","messageId":"312","endLine":1419,"endColumn":151},{"ruleId":"289","replacedBy":"313"},{"ruleId":"291","replacedBy":"314"},{"ruleId":"315","severity":1,"message":"316","line":164,"column":116,"nodeType":"317","endLine":164,"endColumn":148},{"ruleId":"305","severity":1,"message":"318","line":575,"column":457,"nodeType":"307","messageId":"308","endLine":575,"endColumn":459},{"ruleId":"305","severity":1,"message":"318","line":575,"column":609,"nodeType":"307","messageId":"308","endLine":575,"endColumn":611},{"ruleId":"293","severity":1,"message":"319","line":59,"column":12,"nodeType":"295","messageId":"296","endLine":59,"endColumn":24},{"ruleId":"293","severity":1,"message":"297","line":59,"column":26,"nodeType":"295","messageId":"296","endLine":59,"endColumn":41},{"ruleId":"293","severity":1,"message":"320","line":60,"column":12,"nodeType":"295","messageId":"296","endLine":60,"endColumn":27},{"ruleId":"293","severity":1,"message":"321","line":60,"column":29,"nodeType":"295","messageId":"296","endLine":60,"endColumn":47},{"ruleId":"301","severity":1,"message":"322","line":72,"column":15,"nodeType":"323","endLine":220,"endColumn":6},{"ruleId":"301","severity":1,"message":"324","line":220,"column":7,"nodeType":"303","endLine":220,"endColumn":16,"suggestions":"325"},{"ruleId":"301","severity":1,"message":"322","line":222,"column":15,"nodeType":"323","endLine":224,"endColumn":6},{"ruleId":"289","replacedBy":"326"},{"ruleId":"291","replacedBy":"327"},{"ruleId":"309","severity":1,"message":"310","line":122,"column":169,"nodeType":"311","messageId":"312","endLine":122,"endColumn":171},{"ruleId":"309","severity":1,"message":"310","line":122,"column":202,"nodeType":"311","messageId":"312","endLine":122,"endColumn":204},{"ruleId":"293","severity":1,"message":"328","line":58,"column":12,"nodeType":"295","messageId":"296","endLine":58,"endColumn":23},{"ruleId":"289","replacedBy":"329"},{"ruleId":"291","replacedBy":"330"},{"ruleId":"293","severity":1,"message":"331","line":1,"column":16,"nodeType":"295","messageId":"296","endLine":1,"endColumn":24},{"ruleId":"293","severity":1,"message":"332","line":4,"column":8,"nodeType":"295","messageId":"296","endLine":4,"endColumn":19},{"ruleId":"293","severity":1,"message":"333","line":12,"column":9,"nodeType":"295","messageId":"296","endLine":12,"endColumn":22},{"ruleId":"301","severity":1,"message":"334","line":53,"column":7,"nodeType":"303","endLine":53,"endColumn":20,"suggestions":"335"},{"ruleId":"336","severity":1,"message":"337","line":126,"column":9,"nodeType":"295","messageId":"338","endLine":126,"endColumn":24},{"ruleId":"293","severity":1,"message":"333","line":12,"column":9,"nodeType":"295","messageId":"296","endLine":12,"endColumn":22},{"ruleId":"293","severity":1,"message":"339","line":193,"column":11,"nodeType":"295","messageId":"296","endLine":193,"endColumn":16},{"ruleId":"293","severity":1,"message":"333","line":11,"column":9,"nodeType":"295","messageId":"296","endLine":11,"endColumn":22},{"ruleId":"293","severity":1,"message":"340","line":65,"column":15,"nodeType":"295","messageId":"296","endLine":65,"endColumn":18},{"ruleId":"293","severity":1,"message":"339","line":178,"column":11,"nodeType":"295","messageId":"296","endLine":178,"endColumn":16},{"ruleId":"293","severity":1,"message":"333","line":11,"column":9,"nodeType":"295","messageId":"296","endLine":11,"endColumn":22},{"ruleId":"293","severity":1,"message":"340","line":65,"column":15,"nodeType":"295","messageId":"296","endLine":65,"endColumn":18},{"ruleId":"293","severity":1,"message":"339","line":178,"column":11,"nodeType":"295","messageId":"296","endLine":178,"endColumn":16},"no-native-reassign",["341"],"no-negated-in-lhs",["342"],"no-unused-vars","'setProgress' is assigned a value but never used.","Identifier","unusedVar","'setRealProgress' is assigned a value but never used.","'setProgressISO' is assigned a value but never used.","'setRealProgressISO' is assigned a value but never used.","'dataTableHeight' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentUser', 'secureStorage', and 'updateData'. Either include them or remove the dependency array. You can also do a functional update 'setUpdateData(u => ...)' if you only need 'updateData' in the 'setUpdateData' call.","ArrayExpression",["343"],"no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["341"],["342"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","Unexpected mix of '&&' and '||'.","'realProgress' is assigned a value but never used.","'realProgressISO' is assigned a value but never used.","'setRealProgressIso' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'progress', 'progressIso', and 'props.currentRole'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setRealProgressTDValue' needs the current value of 'progress'.",["344"],["341"],["342"],"'anchorElIso' is assigned a value but never used.",["341"],["342"],"'useState' is defined but never used.","'Highlighter' is defined but never used.","'secureStorage' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'currentUser' and 'secureStorage'. Either include them or remove the dependency array.",["345"],"no-redeclare","'dataTableHeight' is already defined.","redeclared","'steps' is assigned a value but never used.","'mod' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"346","fix":"347"},{"desc":"348","fix":"349"},{"desc":"350","fix":"351"},"Update the dependencies array to be: [currentRole, currentUser, secureStorage, updateData]",{"range":"352","text":"353"},"Update the dependencies array to be: [loading, progress, progressIso, props.currentRole]",{"range":"354","text":"355"},"Update the dependencies array to be: [currentRole, currentUser, secureStorage]",{"range":"356","text":"357"},[6889,6902],"[currentRole, currentUser, secureStorage, updateData]",[11706,11715],"[loading, progress, progressIso, props.currentRole]",[2155,2168],"[currentRole, currentUser, secureStorage]"]